{"version":3,"sources":["context.js","components/globalVariables.js","components/atoms/BoardTile.js","services/gameService.js","components/organisms/Word.js","hooks/useGetFromCurrentState.js","components/organisms/WordsOnBoard.js","components/molecules/BoardCoordinates.js","components/atoms/BoardField.js","components/molecules/BoardFields.js","components/molecules/Rack3d.js","hooks/useFillDeletion.js","components/molecules/Deletion.js","reducers/gameReducer.js","components/organisms/FullResult.js","hooks/useAddDiagramToBase.js","hooks/useExportAsImage.js","components/molecules/ModalWithDiagramId.js","components/organisms/ToolButtons.js","components/organisms/Board.js","services/GcgReader.js","components/molecules/HomeMenu.js","components/pages/Home.js","components/organisms/OptionsList.js","components/atoms/TileSquare.js","components/atoms/TilePoints.js","components/molecules/Tile.js","components/organisms/Rack.js","hooks/useHandleKeyDown.js","components/molecules/GameNavigation.js","components/organisms/Result.js","components/pages/GameplayAnalysed.js","components/templates/MainTemplate.js","components/App.js","index.js"],"names":["AppContext","React","createContext","POINTS","A","Ą","B","C","Ć","D","E","Ę","F","G","H","I","J","K","L","Ł","M","N","Ń","O","Ó","P","R","S","Ś","T","U","W","Y","Z","Ź","Ż","FIELDS_PARAMS","word2","color","text","word3","letter2","letter3","middle","word2Fields","word3Fields","letter2Fields","letter3Fields","size","COLORS","BoardTile","x","y","letter","transparent","newMove","blank","toLowerCase","TileColor","width","height","fill","cornerRadius","opacity","data-testid","toUpperCase","align","fontSize","verticalAlign","fontFamily","fontStyle","exceptCoordinates","findPlayedMove","move","choiceOptions","find","opt","coordinates","includes","betweenBracketsValidator","letters","bracketsPairs","findPair","i","start","indexOf","end","push","split","map","undefined","index","some","pair","filter","el","Word","isNewMove","coord","join","slice","charCodeAt","verticle","setPosition","betweenBracketsArray","lettersDivs","useGetFromCurrentState","useContext","context","moves","actualMoveIndex","actualOptionIndex","actualMove","actualOption","currentMoves","isLossMove","moveIndex","pointsBefore","WordsOnBoard","word","isExchange","UpCoordinates","styled","div","LeftCoordinates","CoordinateX","CoordinateY","BoardCoordinates","Array","keys","BoardField","type","stroke","rotation","padding","numPoints","innerRadius","outerRadius","BoardFields","el2","flat","coords","Rack3d","top","className","useFillDeletion","useState","usedLetters","setUsedLetters","useEffect","reduce","acc","replaceAll","length","StyledWrapper","DeletionLetter","onBoard","DeletionLetters","usedTiles","temporaryDeletion","splice","Deletion","setUsedTiles","initialState","withoutNewMove","actionTypes","reducer","state","action","payload","newIndex","fillRow","pointPlayer1","parseInt","movePoints","pointPlayer2","Table","Cell","data-player","Rows","dispatch","realMoves","deductedPoints","endingPlayerPoints","notEndingPlayerPoints","Row","textAlign","onClick","e","target","dataset","player","FullResult","celled","structured","Header","HeaderCell","colSpan","nick","replace","Body","useAddDiagramToBase","addDiagramCallback","a","objectToSend","solutions","console","log","Promise","resolve","reject","id","useExportAsImage","Context","called","setCalled","stageRef","setStageRef","link","document","createElement","download","href","current","toDataURL","body","appendChild","click","removeChild","handleExport","option","ModalWithDiagramId","closeCallback","Modal","onClose","open","Content","Description","Actions","Button","negative","content","labelPosition","icon","positive","StyledButton","ToolButtons","fullResultIsVisible","setFullResultIsVisible","deletionIsVisible","setDeletionIsVisible","diagramId","setDiagramId","getImage","then","res","plainView","css","GameArea","Board","contextForBridgeContext","useRef","ref","Provider","value","regActualPlayer","allRegex","letterOnBoard","GcgReader","convertTextByRegex","match","findFreeLetters","cleanMoveArray","lettersArray","forEach","pushMoveByLineToArray","line","movesArray","atoms","actualIndex","evaluate","percent","freeLetters","readReport","callback","game","files","reader","FileReader","onload","result","readAsText","Options","HiddenInput","input","HomeMenu","inputRef","history","useHistory","handleNewFile","list","onInput","Home","StyledRow","Option","params","selected","active","OptionsList","optionsElements","basic","striped","TileSquare","played","TilePoints","sub","Tile","Rack","checkAndRemoveLetter","tiles","useHandleKeyDown","handleKeyDown","preventDefault","keyCode","addEventListener","removeEventListener","GameNavigation","Item","Points","NewPoints","PlayerResult","order","playerPoints","setPlayerPoints","Grid","Column","as","Result","Segment","compact","columns","relaxed","stackable","Divider","vertical","BoardWrapper","MoveContent","GameplayAnalysed","Background","MainTemplate","children","App","useReducer","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b2739a98.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AppContext = React.createContext();\r\nexport default AppContext;","export const BOARD_SIZE = 650;\r\n\r\nexport const POINTS = {\r\n    A: 1,\r\n    Ą: 5,\r\n    B: 3,\r\n    C: 2,\r\n    Ć: 6,\r\n    D: 2,\r\n    E: 1,\r\n    Ę: 5,\r\n    F: 5,\r\n    G: 3,\r\n    H: 3,\r\n    I: 1,\r\n    J: 3,\r\n    K: 2,\r\n    L: 2,\r\n    Ł: 3,\r\n    M: 2,\r\n    N: 1,\r\n    Ń: 7,\r\n    O: 1,\r\n    Ó: 5,\r\n    P: 2,\r\n    R: 1,\r\n    S: 1,\r\n    Ś: 5,\r\n    T: 2,\r\n    U: 3,\r\n    W: 1,\r\n    Y: 2,\r\n    Z: 1,\r\n    Ź: 9,\r\n    Ż: 5\r\n};\r\n\r\nexport const FIELDS_PARAMS = {\r\n    word2: {\r\n        color: \"#e8b442\",\r\n        text: \"PODWÓJNA PREMIA SŁOWNA\",\r\n    },\r\n    word3: {\r\n        color: \"#c02929\",\r\n        text: \"POTRÓJNA PREMIA SŁOWNA\",\r\n    },\r\n    letter2: {\r\n        color: \"#7590c7\",\r\n        text: \"PODWÓJNA PREMIA LITEROWA\",\r\n    },\r\n    letter3: {\r\n        color: \"#0078c1\",\r\n        text: \"POTRÓJNA PREMIA LITEROWA\",\r\n    },\r\n    middle: {\r\n        color: '#e8b442',\r\n        text: ''\r\n    }\r\n}\r\n\r\nexport const word2Fields = [\r\n    [1, 1],\r\n    [2, 2],\r\n    [3, 3],\r\n    [4, 4],\r\n    [10, 10],\r\n    [11, 11],\r\n    [12, 12],\r\n    [13, 13],\r\n    [1, 13],\r\n    [2, 12],\r\n    [3, 11],\r\n    [4, 10],\r\n    [10, 4],\r\n    [11, 3],\r\n    [12, 2],\r\n    [13, 1],\r\n];\r\nexport const word3Fields = [\r\n    [0, 0],\r\n    [0, 7],\r\n    [0, 14],\r\n    [7, 0],\r\n    [7, 14],\r\n    [14, 0],\r\n    [14, 7],\r\n    [14, 14],\r\n];\r\n\r\nexport const letter2Fields = [\r\n    [0, 3],\r\n    [0, 11],\r\n    [2, 6],\r\n    [2, 8],\r\n    [3, 0],\r\n    [3, 7],\r\n    [3, 14],\r\n    [6, 2],\r\n    [6, 6],\r\n    [6, 8],\r\n    [6, 12],\r\n    [7, 3],\r\n    [7, 11],\r\n    [8, 2],\r\n    [8, 6],\r\n    [8, 8],\r\n    [8, 12],\r\n    [11, 0],\r\n    [11, 7],\r\n    [11, 14],\r\n    [12, 6],\r\n    [12, 8],\r\n    [14, 3],\r\n    [14, 11],\r\n];\r\n\r\nexport const letter3Fields = [\r\n    [1, 5],\r\n    [1, 9],\r\n    [5, 1],\r\n    [5, 5],\r\n    [5, 9],\r\n    [5, 13],\r\n    [9, 1],\r\n    [9, 5],\r\n    [9, 9],\r\n    [9, 13],\r\n    [13, 5],\r\n    [13, 9],\r\n]","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Rect, Text } from \"react-konva\";\r\n\r\nimport { POINTS } from \"../globalVariables\";\r\n\r\nconst size = 570 / 15;\r\nconst COLORS = {\r\n  basic: \"#f8e8c7\",\r\n  newMove: \"#1ae825\",\r\n};\r\nconst BoardTile = ({ x, y, letter, transparent, newMove }) => {\r\n  const blank = letter === letter.toLowerCase();\r\n  const TileColor = newMove ? COLORS.newMove : COLORS.basic;\r\n  return (\r\n    <>\r\n      <Rect\r\n        x={x + 1}\r\n        y={y + 1}\r\n        width={size - 2}\r\n        height={size - 2}\r\n        fill={TileColor}\r\n        cornerRadius={4}\r\n        opacity={transparent ? 0 : 1}\r\n        data-testid=\"tile\"\r\n      />\r\n      <Text\r\n        x={x}\r\n        y={y + 8}\r\n        width={size}\r\n        height={size}\r\n        fill={\"#015b52\"}\r\n        text={letter.toUpperCase()}\r\n        align=\"center\"\r\n        fontSize={25}\r\n        verticalAlign=\"center\"\r\n        fontFamily=\"Arial\"\r\n        fontStyle=\"bold\"\r\n        opacity={transparent ? 0 : blank ? 0.3 : 1}\r\n        data-testid=\"letter\"\r\n      />\r\n      <Text\r\n        x={x + size - 10}\r\n        y={y + size - 10}\r\n        width={10}\r\n        height={10}\r\n        fill={\"#015b52\"}\r\n        text={POINTS[letter]}\r\n        align=\"center\"\r\n        fontSize={9}\r\n        verticalAlign=\"center\"\r\n        fontFamily=\"Arial\"\r\n        fontStyle=\"bold\"\r\n        opacity={transparent ? 0 : 1}\r\n        data-testid=\"points\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nBoardTile.propTypes = {\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  letter: PropTypes.string,\r\n  transparent: PropTypes.bool,\r\n  newMove: PropTypes.bool,\r\n};\r\n\r\nexport default BoardTile;\r\n","const exceptCoordinates = [\"*xch\", \"xch\"];\r\n\r\nexport const isExchange = (coordinates) =>\r\n  exceptCoordinates.some((el) => el === coordinates);\r\n\r\nexport const findPlayedMove = (move) => {\r\n  return move?.choiceOptions?.find((opt) => opt.coordinates.includes(\"*\"));\r\n};\r\n\r\nexport const setPosition = (coordinates) => {\r\n  const coord = coordinates\r\n    .split(\"\")\r\n    .filter((el) => el !== \"*\")\r\n    .join(\"\");\r\n  if (coord.slice(-1) !== coord.slice(-1).toLowerCase())\r\n    //horizontal\r\n    return {\r\n      x: coord.slice(-1).charCodeAt() - 65,\r\n      y: coord.slice(0, -1) - 1,\r\n      verticle: false,\r\n    };\r\n  else\r\n    return {\r\n      x: coord[0].charCodeAt() - 65,\r\n      y: coord.slice(1) - 1,\r\n      verticle: true,\r\n    };\r\n};\r\n\r\nexport const isMoveWithWord = (move) =>\r\n  !exceptCoordinates.some((el) => el === move.coordinates);\r\n\r\nexport const betweenBracketsValidator = (letters) => {\r\n  const bracketsPairs = [];\r\n  const findPair = (i) => {\r\n    const start = letters.indexOf(\"(\", i);\r\n    const end = letters.indexOf(\")\", i + 1);\r\n    if (end !== -1) {\r\n      bracketsPairs.push({ start, end });\r\n      findPair(end);\r\n    }\r\n  };\r\n  findPair(0);\r\n  const isBetween = (index) =>\r\n    bracketsPairs.some((pair) => pair.start < index && pair.end > index);\r\n  const booleanArray = letters\r\n    .split(\"\")\r\n    .map((letter, i) =>\r\n      [\"(\", \")\"].includes(letter) ? undefined : isBetween(i)\r\n    )\r\n    .filter((el) => el !== undefined);\r\n  return booleanArray;\r\n};\r\n","import React from \"react\";\r\n\r\nimport BoardTile from \"../atoms/BoardTile\";\r\nimport {\r\n  betweenBracketsValidator,\r\n  setPosition,\r\n} from \"../../services/gameService\";\r\n\r\nconst size = 570 / 15;\r\n\r\nconst Word = ({ isNewMove, letters, coordinates }) => {\r\n  const { x, y, verticle } = setPosition(coordinates);\r\n  const betweenBracketsArray = betweenBracketsValidator(letters);\r\n\r\n  const lettersDivs = letters\r\n    .split(\"\")\r\n    .filter((letter) => ![\"(\", \")\"].includes(letter))\r\n    .map((letter, index) => (\r\n      <BoardTile\r\n        key={index}\r\n        x={verticle ? x * size : (x + index) * size}\r\n        y={verticle ? (y + index) * size : y * size}\r\n        letter={letter}\r\n        transparent={betweenBracketsArray[index]}\r\n        newMove={isNewMove}\r\n      />\r\n    ));\r\n  return <>{lettersDivs}</>;\r\n};\r\n\r\nexport default Word;\r\n","import { useContext } from \"react\";\r\n\r\nimport context from \"../context\";\r\n\r\nconst useGetFromCurrentState = () => {\r\n  const { moves, actualMoveIndex, actualOptionIndex } = useContext(context);\r\n\r\n  const actualMove = moves?.[actualMoveIndex];\r\n  const actualOption =\r\n    moves?.[actualMoveIndex]?.choiceOptions[actualOptionIndex];\r\n  const currentMoves = moves?.slice(0, actualMoveIndex);\r\n  const isLossMove = (moveIndex) =>\r\n    moves[moveIndex].pointsBefore === moves[moveIndex + 2].pointsBefore;\r\n  return { actualMove, actualOption, currentMoves, isLossMove };\r\n};\r\n\r\nexport default useGetFromCurrentState;\r\n","import React from \"react\";\r\n\r\nimport Word from \"./Word\";\r\nimport useGetFromCurrentState from \"../../hooks/useGetFromCurrentState\";\r\nimport { findPlayedMove, isExchange } from \"../../services/gameService\";\r\n\r\nconst WordsOnBoard = () => {\r\n  const { currentMoves, isLossMove } = useGetFromCurrentState();\r\n\r\n  return (\r\n    <>\r\n      {currentMoves.map((move, index) => {\r\n        const { word, coordinates } = findPlayedMove(move);\r\n        return isExchange(coordinates) || isLossMove(index) ? null : (\r\n          <Word key={index} letters={word} coordinates={coordinates} />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WordsOnBoard;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst UpCoordinates = styled.div`\r\n  position: absolute;\r\n  color: white;\r\n  line-height: 30px;\r\n  left: 40px;\r\n  height: 30px;\r\n  width: calc(100% - 80px);\r\n  font-size: 11px;\r\n  display: flex;\r\n`;\r\n\r\nconst LeftCoordinates = styled.div`\r\n  position: absolute;\r\n  color: white;\r\n  top: 30px;\r\n  left: 10px;\r\n  height: calc(100% - 80px);\r\n  width: 30px;\r\n  font-size: 11px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CoordinateX = styled.div`\r\n  width: calc(100% / 15);\r\n  text-align: center;\r\n`;\r\n\r\nconst CoordinateY = styled.div`\r\n  height: calc(100% / 15);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst BoardCoordinates = () => {\r\n  return (\r\n    <>\r\n      <UpCoordinates>\r\n        {[...Array(15).keys()].map((el) => (\r\n          <CoordinateX key={el}>{el + 1}</CoordinateX>\r\n        ))}\r\n      </UpCoordinates>\r\n      <LeftCoordinates>\r\n        {\"ABCDEFGHIJKLMNO\".split(\"\").map((el) => (\r\n          <CoordinateY key={el}>{el}</CoordinateY>\r\n        ))}\r\n      </LeftCoordinates>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BoardCoordinates;\r\n","import React from \"react\";\r\nimport { Rect, Text, Star } from \"react-konva\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FIELDS_PARAMS } from \"../globalVariables\";\r\n\r\nconst size = 570 / 15;\r\n\r\nconst BoardField = ({ x, y, type }) => {\r\n  return (\r\n    <>\r\n      <Rect\r\n        x={x * size}\r\n        y={y * size}\r\n        width={size}\r\n        height={size}\r\n        fill=\"#08763b\"\r\n        stroke=\"#badce9\"\r\n        data-testid=\"board-field\"\r\n      />\r\n      {type ? (\r\n        <>\r\n          <Rect\r\n            x={x * size + size / 2}\r\n            y={y * size - size / 4 + 1}\r\n            width={size}\r\n            height={size}\r\n            fill={FIELDS_PARAMS[type].color}\r\n            rotation={45}\r\n            data-testid=\"rotated-rect\"\r\n          />\r\n          <Rect\r\n            x={x * size}\r\n            y={y * size}\r\n            width={size}\r\n            height={size}\r\n            fill={FIELDS_PARAMS[type].color}\r\n            stroke=\"#badce9\"\r\n          />\r\n          <Text\r\n            x={x * size}\r\n            y={y * size + 8}\r\n            width={size}\r\n            height={size}\r\n            text={FIELDS_PARAMS[type].text}\r\n            align=\"center\"\r\n            fontSize={7}\r\n            verticalAlign=\"center\"\r\n            fontFamily=\"Calibri\"\r\n            padding={1}\r\n          />\r\n          {type === \"middle\" && (\r\n            <Star\r\n              x={x * size + size / 2}\r\n              y={y * size + size / 2}\r\n              numPoints={8}\r\n              innerRadius={size / 6}\r\n              outerRadius={size / 4}\r\n              fill=\"#DC9C10\"\r\n              opacity={1}\r\n              data-testid=\"star\"\r\n            />\r\n          )}\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nBoardField.propTypes = {\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default BoardField;\r\n","import React from 'react';\r\n\r\nimport BoardField from \"../atoms/BoardField\";\r\nimport {\r\n    word2Fields,\r\n    word3Fields,\r\n    letter2Fields,\r\n    letter3Fields,\r\n} from \"../globalVariables\";\r\n\r\nconst BonusFields = (coords, type) =>\r\n    coords.map((el) => <BoardField key={el} x={el[0]} y={el[1]} type={type} />);\r\n\r\nconst Fields = () => {\r\n    return [...Array(15).keys()]\r\n        .map((el) =>\r\n            [...Array(15).keys()].map((el2) => <BoardField key={`${el}${el}${el2}`} x={el} y={el2} />)\r\n        )\r\n        .flat();\r\n};\r\n\r\nconst BoardFields = () => {\r\n    return (\r\n        <>\r\n            {Fields()}\r\n            {[\r\n                [word2Fields, \"word2\"],\r\n                [word3Fields, \"word3\"],\r\n                [letter2Fields, \"letter2\"],\r\n                [letter3Fields, \"letter3\"],\r\n                [[[7, 7]], \"middle\"],\r\n            ].map((el) => BonusFields(el[0], el[1]))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BoardFields;\r\n","import React from 'react';\r\nimport '../../css/rack.css';\r\nconst Rack3d = ({ top }) => {\r\n    return (\r\n        <>\r\n            <div className={top ? \"tridiv top\" : \"tridiv \"}>\r\n                <div className=\"scene\">\r\n                    <div className=\"shape prism-1 pri-1\">\r\n                        <div className=\"face ft\">\r\n                            <div className=\"photon-shader bcg1\"></div>\r\n                        </div>\r\n                        <div className=\"face bk\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                        <div className=\"face-wrapper rt\">\r\n                            <div className=\"face\">\r\n                                <div className=\"photon-shader bcg2\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"face-wrapper lt\">\r\n                            <div className=\"face\">\r\n                                <div className=\"photon-shader bcg2\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"face bm\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"shape cuboid-1 cub-1\">\r\n                        <div className=\"face ft\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                        <div className=\"face bk\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                        <div className=\"face rt\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                        <div className=\"face lt\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                        <div className=\"face bm\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                        <div className=\"face tp\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Rack3d;\r\n","import { useEffect, useState, useContext } from \"react\";\r\n\r\nimport { findPlayedMove } from \"../services/gameService\";\r\nimport useGetFromCurrentState from \"./useGetFromCurrentState\";\r\nconst useFillDeletion = () => {\r\n  const [usedLetters, setUsedLetters] = useState([]);\r\n  const { currentMoves, isLossMove } = useGetFromCurrentState();\r\n  useEffect(() => {\r\n    const letters = currentMoves\r\n      .filter((el, i) => !isLossMove(i))\r\n      .map((move) => findPlayedMove(move))\r\n      .reduce(\r\n        (acc, { word }) => [\r\n          ...acc,\r\n          ...word.replaceAll(/\\([^)]+\\)/g, \"\").split(\"\"),\r\n        ],\r\n        \"\"\r\n      );\r\n    setUsedLetters([...letters]);\r\n  }, [currentMoves.length]);\r\n\r\n  return { usedLetters };\r\n};\r\n\r\nexport default useFillDeletion;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport useFillDeletion from \"../../hooks/useFillDeletion\";\r\nimport useGetFromCurrentState from \"../../hooks/useGetFromCurrentState\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 300px;\r\n  height: 300px;\r\n  user-select: none;\r\n  background-color: rgb(75, 75, 75);\r\n  z-index: 2;\r\n  top: 40px;\r\n  left: 20px;\r\n`;\r\n\r\nconst DeletionLetter = styled.div`\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  width: 30px;\r\n  height: 30px;\r\n  background-color: #f8e8c7;\r\n  border: 1px solid rgb(218, 193, 145);\r\n  color: #015b52;\r\n  border-radius: 3px;\r\n  font-size: 20px;\r\n  line-height: 30px;\r\n  opacity: ${({ onBoard }) => (onBoard ? 0.4 : 1)};\r\n`;\r\nconst LETTERS =\r\n  \"AAAAAAAAAĄBBCCCĆDDDEEEEEEEĘFGGHHIIIIIIIIJJKKKLLLŁŁMMMNNNNNŃOOOOOOÓPPPRRRRSSSSŚTTTUUWWWWYYYYZZZZZŻŹ??\";\r\n\r\nconst DeletionLetters = (usedTiles) => {\r\n  let temporaryDeletion = [...usedTiles];\r\n  return LETTERS.split(\"\").map((letter, index) => {\r\n    const onBoard = temporaryDeletion.includes(letter);\r\n    if (onBoard) temporaryDeletion.splice(temporaryDeletion.indexOf(letter), 1);\r\n    return (\r\n      <DeletionLetter key={index} onBoard={onBoard}>\r\n        {letter}\r\n      </DeletionLetter>\r\n    );\r\n  });\r\n};\r\n\r\nconst Deletion = () => {\r\n  const { actualMove } = useGetFromCurrentState();\r\n  const [usedTiles, setUsedTiles] = useState([]);\r\n  const { usedLetters } = useFillDeletion();\r\n  useEffect(() => {\r\n    setUsedTiles([...usedLetters, ...actualMove.letters]);\r\n  }, [usedLetters, actualMove]);\r\n  return (\r\n    <StyledWrapper data-testid=\"deletion\">\r\n      {DeletionLetters(usedTiles)}\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default Deletion;\r\n","import { findPlayedMove } from \"../services/gameService\";\r\n\r\nexport const initialState = {\r\n  moves: [],\r\n  actualMoveIndex: undefined,\r\n  actualOptionIndex: 0,\r\n  withoutNewMove: false,\r\n};\r\n\r\nexport const actionTypes = {\r\n  setMovesArray: \"SET_MOVES_ARRAY\",\r\n  setMoveIndex: \"SET_MOVE_INDEX\",\r\n  incrementMoveIndex: \"INCREMENT_MOVE_INDEX\",\r\n  decrementMoveIndex: \"DECREMENT_MOVE_INDEX\",\r\n  incrementOptionIndex: \"INCREMENT_OPTION_INDEX\",\r\n  decrementOptionIndex: \"DECREMENT_OPTION_INDEX\",\r\n  setOptionIndex: \"SET_OPTION_INDEX\",\r\n  setWithoutNewMove: \"SET_WITHOUT_NEW_MOVE\",\r\n};\r\n\r\nexport function reducer(state, action) {\r\n  const { moves, actualMoveIndex, actualOptionIndex } = state;\r\n\r\n  switch (action.type) {\r\n    case actionTypes.setMovesArray:\r\n      return {\r\n        ...state,\r\n        moves: action.payload,\r\n        actualMoveIndex: 0,\r\n        actualOptionIndex: findPlayedMove(action.payload[0]).index,\r\n      };\r\n\r\n    case actionTypes.setMoveIndex:\r\n      const newIndex =\r\n        action.payload > -1\r\n          ? action.payload\r\n          : state.moves.length - 1 + action.payload;\r\n      return {\r\n        ...state,\r\n        actualMoveIndex: newIndex,\r\n        actualOptionIndex: findPlayedMove(moves[newIndex]).index,\r\n      };\r\n\r\n    case actionTypes.incrementMoveIndex:\r\n      if (moves.length > actualMoveIndex + 2)\r\n        return {\r\n          ...state,\r\n          actualMoveIndex: actualMoveIndex + 1,\r\n          actualOptionIndex: findPlayedMove(moves[actualMoveIndex + 1]).index,\r\n        };\r\n      else return state;\r\n\r\n    case actionTypes.decrementMoveIndex:\r\n      if (actualMoveIndex > 0)\r\n        return {\r\n          ...state,\r\n          actualMoveIndex: actualMoveIndex - 1,\r\n          actualOptionIndex: findPlayedMove(moves[actualMoveIndex - 1]).index,\r\n        };\r\n      else return state;\r\n\r\n    case actionTypes.setOptionIndex:\r\n      return { ...state, actualOptionIndex: action.payload };\r\n\r\n    case actionTypes.incrementOptionIndex:\r\n      if (actualOptionIndex + 1 < moves[actualMoveIndex].choiceOptions.length)\r\n        return { ...state, actualOptionIndex: actualOptionIndex + 1 };\r\n      else return state;\r\n\r\n    case actionTypes.decrementOptionIndex:\r\n      if (state.actualOptionIndex !== 0)\r\n        return { ...state, actualOptionIndex: state.actualOptionIndex - 1 };\r\n      else return state;\r\n\r\n    case actionTypes.setWithoutNewMove:\r\n      return { ...state, withoutNewMove: action.payload };\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nimport { findPlayedMove } from \"../../services/gameService\";\r\nimport context from \"../../context\";\r\nimport { actionTypes } from \"../../reducers/gameReducer\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  position: absolute;\r\n  width: 500px;\r\n  top: 40px;\r\n  left: 10px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst fillRow = (moves) => {\r\n  const pointPlayer1 = parseInt(findPlayedMove(moves[0])?.movePoints) || 0;\r\n  const pointPlayer2 = parseInt(findPlayedMove(moves[1])?.movePoints) || 0;\r\n  return (\r\n    <>\r\n      <Table.Cell data-player={0}>+{pointPlayer1}</Table.Cell>\r\n      <Table.Cell data-player={0}>\r\n        {pointPlayer1 + parseInt(moves[0]?.pointsBefore)}\r\n      </Table.Cell>\r\n      <Table.Cell data-player={1}>+{pointPlayer2}</Table.Cell>\r\n      <Table.Cell data-player={1}>\r\n        {pointPlayer2 + parseInt(moves[1]?.pointsBefore) || \"\"}\r\n      </Table.Cell>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Rows = () => {\r\n  const { moves, dispatch } = useContext(context);\r\n  const realMoves = moves.slice(0, moves.length - (moves.length % 2 ? 2 : 1));\r\n  const deductedPoints =\r\n    (moves[moves.length - 1].letters -\r\n      moves[moves.length - 2].pointsBefore -\r\n      parseInt(findPlayedMove(moves[moves.length - 2]).movePoints)) /\r\n    2;\r\n  const endingPlayerPoints =\r\n    parseInt(moves[moves.length - 3].pointsBefore) +\r\n    parseInt(findPlayedMove(moves[moves.length - 3]).movePoints) -\r\n    deductedPoints;\r\n  const notEndingPlayerPoints =\r\n    parseInt(moves[moves.length - 2].pointsBefore) +\r\n    parseInt(findPlayedMove(moves[moves.length - 2]).movePoints) +\r\n    deductedPoints;\r\n  return (\r\n    <>\r\n      {realMoves.map((move, index) => {\r\n        if (!(index % 2)) {\r\n          return (\r\n            <Table.Row\r\n              key={index}\r\n              textAlign=\"center\"\r\n              onClick={(e) =>\r\n                dispatch({\r\n                  type: actionTypes.setMoveIndex,\r\n                  payload: index + parseInt(e.target.dataset.player),\r\n                })\r\n              }\r\n            >\r\n              {fillRow(moves.slice(index, index + 2))}\r\n            </Table.Row>\r\n          );\r\n        } else return null;\r\n      })}\r\n      <Table.Row textAlign=\"center\">\r\n        <Table.Cell data-player={0}>\r\n          {moves.length % 2 ? \"-\" : \"+\"}\r\n          {deductedPoints}\r\n        </Table.Cell>\r\n        <Table.Cell data-player={0}>\r\n          {moves.length % 2 ? endingPlayerPoints : notEndingPlayerPoints}\r\n        </Table.Cell>\r\n        <Table.Cell data-player={1}>\r\n          {moves.length % 2 ? \"+\" : \"-\"}\r\n          {deductedPoints}\r\n        </Table.Cell>\r\n        <Table.Cell data-player={1}>\r\n          {moves.length % 2 ? notEndingPlayerPoints : endingPlayerPoints}\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst FullResult = () => {\r\n  const { moves } = useContext(context);\r\n\r\n  return (\r\n    <StyledWrapper data-testid=\"full-result\">\r\n      <Table celled structured>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell colSpan=\"2\" textAlign=\"center\">\r\n              {moves[0].nick.replace(\"_\", \" \")}\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell colSpan=\"2\" textAlign=\"center\">\r\n              {moves[1].nick.replace(\"_\", \" \")}\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          <Rows />\r\n        </Table.Body>\r\n      </Table>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default FullResult;\r\n","import { useContext } from \"react\";\r\n\r\nimport context from \"../context\";\r\nimport useGetFromCurrentState from \"./useGetFromCurrentState\";\r\n\r\nconst useAddDiagramToBase = () => {\r\n  const { actualMoveIndex } = useContext(context);\r\n  const { currentMoves, actualMove } = useGetFromCurrentState();\r\n  const addDiagramCallback = async () => {\r\n    // const id = await fetch('/api/', {\r\n    //     method: 'POST',\r\n    //     body: {\r\n    //         moves,\r\n    //         index: actualMoveIndex\r\n    //     }\r\n    // })\r\n    const objectToSend = {\r\n      moves: currentMoves,\r\n      letters: actualMove.letters,\r\n      index: actualMoveIndex,\r\n      solutions: actualMove,\r\n    };\r\n    console.log(objectToSend);\r\n    return new Promise((resolve, reject) => {\r\n      resolve({ id: \"476\" });\r\n    });\r\n  };\r\n\r\n  return { addDiagramCallback };\r\n};\r\n\r\nexport default useAddDiagramToBase;\r\n","import { useEffect, useContext, useState } from \"react\";\r\n\r\nimport Context from \"../context\";\r\nimport { actionTypes } from \"../reducers/gameReducer\";\r\n\r\nconst handleExport = (stageRef) => {\r\n  const link = document.createElement(\"a\");\r\n  link.download = `image.png`;\r\n  link.href = stageRef.current.toDataURL();\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n};\r\n\r\nconst useExportAsImage = () => {\r\n  const { withoutNewMove, dispatch } = useContext(Context);\r\n  const [called, setCalled] = useState(false);\r\n  const [stageRef, setStageRef] = useState(false);\r\n  useEffect(() => {\r\n    if (called) {\r\n      handleExport(stageRef);\r\n      setCalled(false);\r\n      dispatch({ type: actionTypes.setWithoutNewMove, payload: false });\r\n    }\r\n  }, [withoutNewMove, called]);\r\n\r\n  const getImage = (stageRef, option) => {\r\n    dispatch({ type: actionTypes.setWithoutNewMove, payload: option });\r\n    setCalled(true);\r\n    setStageRef(stageRef);\r\n  };\r\n  return [getImage];\r\n};\r\n\r\nexport default useExportAsImage;\r\n","import React from \"react\";\r\nimport { Button, Header, Modal } from \"semantic-ui-react\";\r\n\r\nconst ModalWithDiagramId = ({ id, closeCallback }) => {\r\n    return (\r\n        <Modal onClose={closeCallback} open={true}>\r\n            <Modal.Header>Pomyślnie dodano</Modal.Header>\r\n            <Modal.Content>\r\n                <Modal.Description>\r\n                    <Header>\r\n                        Twoje zadanie jest dostępne pod adresem localhost:3000/zadania/{id}\r\n                    </Header>\r\n                    <p>Jeżeli dodałeś je przez przypadek, wciśnij przycisk 'anuluj'</p>\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button negative onClick={closeCallback}>\r\n                    anuluj\r\n                </Button>\r\n                <Button\r\n                    content=\"akceptuj\"\r\n                    labelPosition=\"right\"\r\n                    icon=\"checkmark\"\r\n                    onClick={closeCallback}\r\n                    positive\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalWithDiagramId;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport Deletion from \"../molecules/Deletion\";\r\nimport FullResult from \"../organisms/FullResult\";\r\nimport useAddDiagramToBase from \"../../hooks/useAddDiagramToBase\";\r\nimport useExportAsImage from \"../../hooks/useExportAsImage\";\r\nimport ModalWithDiagramId from \"../molecules/ModalWithDiagramId\";\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  width: 660px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  background: #aba2a2 !important;\r\n  padding: 12px !important;\r\n`;\r\n\r\nconst ToolButtons = ({ stageRef }) => {\r\n  const [fullResultIsVisible, setFullResultIsVisible] = useState(false);\r\n  const [deletionIsVisible, setDeletionIsVisible] = useState(false);\r\n  const [diagramId, setDiagramId] = useState(\"\");\r\n\r\n  const [getImage] = useExportAsImage();\r\n\r\n  const { addDiagramCallback } = useAddDiagramToBase();\r\n\r\n  return (\r\n    <StyledWrapper data-testid=\"buttons-wrapper\">\r\n      <StyledButton\r\n        color=\"teal\"\r\n        onClick={() => setDeletionIsVisible(!deletionIsVisible)}\r\n      >\r\n        Wykreślanka\r\n      </StyledButton>\r\n      <StyledButton\r\n        color=\"teal\"\r\n        onClick={() => setFullResultIsVisible(!fullResultIsVisible)}\r\n      >\r\n        Pełny zapis\r\n      </StyledButton>\r\n      <StyledButton color=\"teal\" onClick={() => getImage(stageRef, true)}>\r\n        Zapisz obraz (przed)\r\n      </StyledButton>\r\n      <StyledButton color=\"teal\" onClick={() => getImage(stageRef, false)}>\r\n        Zapisz obraz (po)\r\n      </StyledButton>\r\n      <StyledButton\r\n        color=\"teal\"\r\n        onClick={() => addDiagramCallback().then((res) => setDiagramId(res.id))}\r\n      >\r\n        Dodaj jako zadanie\r\n      </StyledButton>\r\n      {deletionIsVisible ? <Deletion /> : null}\r\n      {fullResultIsVisible ? <FullResult /> : null}\r\n      {diagramId ? (\r\n        <ModalWithDiagramId\r\n          id={diagramId}\r\n          closeCallback={() => setDiagramId(null)}\r\n        />\r\n      ) : null}\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default ToolButtons;\r\n","import React, { useContext, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\n\r\nimport AppContext from \"../../context\";\r\nimport Word from \"./Word\";\r\nimport WordsOnBoard from \"./WordsOnBoard\";\r\nimport BoardCoordinates from \"../molecules/BoardCoordinates\";\r\nimport BoardFields from \"../molecules/BoardFields\";\r\nimport Rack3d from \"../molecules/Rack3d\";\r\nimport ToolButtons from \"../organisms/ToolButtons\";\r\nimport context from \"../../context\";\r\nimport { isMoveWithWord } from \"../../services/gameService\";\r\nimport useGetFromCurrentState from \"../../hooks/useGetFromCurrentState\";\r\nconst StyledWrapper = styled.div`\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  min-width: 650px;\r\n  height: 650px;\r\n  width: 650px;\r\n  box-sizing: content-box;\r\n  background-color: #08763b;\r\n  border: 3px solid rgb(34, 51, 51);\r\n  transform: translateX(65%) perspective(1000px) rotateX(70deg) rotateZ(-45deg);\r\n  transform-style: preserve-3d;\r\n  transition: 1s linear;\r\n  -webkit-transition: 1s linear;\r\n\r\n  ${({ plainView }) =>\r\n    plainView &&\r\n    css`\r\n      transform: rotateX(0);\r\n    `}\r\n`;\r\n\r\nconst GameArea = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 40px;\r\n  height: calc(100% - 80px);\r\n  width: calc(100% - 80px);\r\n  z-index: 10;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    background-color: #c02929;\r\n    width: calc(100% / 15);\r\n    height: calc(100% / 15);\r\n    transform: rotate(45deg);\r\n    left: 30x;\r\n    box-shadow: 80px 80px #7590c7, 188px 188px #c02929, 294px 294px #7590c7,\r\n      376px 376px #c02929, 80px -80px #7590c7, 188px -188px #c02929,\r\n      296px -296px #7590c7, 376px -376px #c02929, 456px -297px #7590c7,\r\n      564px -189px #c02929, 673px -80px #7590c7, 752px 0px #c02929,\r\n      673px 80px #7590c7, 564px 189px #c02929, 456px 297px #7590c7;\r\n  }\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    box-shadow: 0px 0px 0px 1px #badce9;\r\n  }\r\n`;\r\n\r\nconst Board = () => {\r\n  const contextForBridgeContext = useContext(context);\r\n  const { moves, withoutNewMove } = useContext(context);\r\n\r\n  const stageRef = useRef(null);\r\n  const { actualOption } = useGetFromCurrentState();\r\n  return (\r\n    <>\r\n      {moves?.length ? <ToolButtons stageRef={stageRef} /> : null}\r\n      <StyledWrapper plainView={!!actualOption} data-testid=\"board\">\r\n        {!moves.length && (\r\n          <>\r\n            <Rack3d />\r\n            <Rack3d top />\r\n          </>\r\n        )}\r\n        <BoardCoordinates />\r\n        <GameArea>\r\n          <Stage width={570} height={570} ref={stageRef}>\r\n            <AppContext.Provider value={contextForBridgeContext}>\r\n              <Layer fill=\"#08763b\">\r\n                <Rect width={570} height={570} fill=\"#08763b\" />\r\n                <BoardFields />\r\n                {actualOption ? <WordsOnBoard /> : null}\r\n                {!withoutNewMove &&\r\n                actualOption &&\r\n                isMoveWithWord(actualOption) ? (\r\n                  <Word\r\n                    letters={actualOption.word}\r\n                    coordinates={actualOption.coordinates}\r\n                    isNewMove\r\n                  />\r\n                ) : null}\r\n              </Layer>\r\n            </AppContext.Provider>\r\n          </Stage>\r\n        </GameArea>\r\n      </StyledWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","const regActualPlayer = /->(\\s*.*)/gi;\r\nconst allRegex = /(->(\\s*.*))| ((best)|(\\d+\\.\\d*))(.*)/gi;\r\nconst letterOnBoard = /\\(.+\\)/g;\r\nconst blank = /[a-z ąęóśłżźćń]/g;\r\nclass GcgReader {\r\n\r\n    convertTextByRegex = (text) => text.match(allRegex);\r\n\r\n    findFreeLetters = (move, letters) => {\r\n        const cleanMoveArray = move\r\n            .replace(letterOnBoard, '')\r\n            .replace(blank, '?')\r\n            .split('');\r\n        const lettersArray = letters.split('');\r\n        cleanMoveArray.forEach(letter => lettersArray.splice(lettersArray.indexOf(letter), 1));\r\n        return lettersArray.join('');\r\n    }\r\n\r\n    pushMoveByLineToArray = (line, movesArray) => {\r\n        const atoms = line.replace(/\\*/g, ' *').split(/\\s+/).filter(el => el !== '');\r\n\r\n        //add played move\r\n        if (line.match(regActualPlayer)) {\r\n            movesArray.push({\r\n                index: movesArray.length,\r\n                nick: atoms[1],\r\n                letters: atoms[2],\r\n                pointsBefore: atoms[3],\r\n                move: line,\r\n                choiceOptions: []\r\n            });\r\n        }\r\n        //add option to move \r\n        else {\r\n            const actualIndex = movesArray.length - 1;\r\n            movesArray[actualIndex].choiceOptions.push({\r\n                index: movesArray[actualIndex].choiceOptions.length,\r\n                evaluate: atoms[0],\r\n                coordinates: atoms[1],\r\n                word: atoms[2],\r\n                movePoints: atoms[3],\r\n                percent: atoms.length > 4 ? (atoms[4][atoms[4].length - 1] === '%' ? atoms[4] : '0%') : '',\r\n                freeLetters: this.findFreeLetters(atoms[2], movesArray[actualIndex].letters)\r\n            });\r\n        }\r\n    }\r\n    showPossibilities(movesArray) {\r\n    }\r\n    readReport = (e, callback) => {\r\n        const movesArray = [];\r\n        const game = e.target.files[0];\r\n        if (!game) return 0;\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const lines = this.convertTextByRegex(e.target.result);\r\n            lines.forEach((line) =>\r\n                this.pushMoveByLineToArray(line, movesArray)\r\n            )\r\n            callback(movesArray);\r\n        }\r\n        reader.readAsText(game);\r\n    };\r\n}\r\n\r\nexport default GcgReader;\r\n","import React, { useRef, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport GcgReader from \"../../services/GcgReader\";\r\nimport AppContext from \"../../context\";\r\nimport { actionTypes } from \"../../reducers/gameReducer\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: absolute;\r\n  height: 200px;\r\n  line-height: 200px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Options = styled.a`\r\n  font-size: 35px;\r\n  display: block;\r\n  color: #3c4a3e;\r\n  text-transform: uppercase;\r\n  position: relative;\r\n  margin-left: 25px;\r\n  margin-right: 25px;\r\n  &:visited {\r\n    color: #3c4a3e;\r\n  }\r\n  &:hover {\r\n    color: #96b364;\r\n  }\r\n\r\n  &:hover:before {\r\n    opacity: 1;\r\n    width: 200px;\r\n  }\r\n\r\n  &:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    width: 130px;\r\n    height: 2px;\r\n    background: #3c4a3e;\r\n    bottom: 70px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    opacity: 0;\r\n    transition: 0.4s;\r\n  }\r\n  &:first-of-type::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 3px;\r\n    height: 80px;\r\n    transform: rotate(15deg);\r\n    background: #3c4a3e;\r\n    top: 60px;\r\n    right: -25px;\r\n  }\r\n`;\r\nconst HiddenInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst HomeMenu = () => {\r\n  const { dispatch } = useContext(AppContext);\r\n  const inputRef = useRef(null);\r\n  const history = useHistory();\r\n\r\n  const handleNewFile = (list) => {\r\n    dispatch({ type: actionTypes.setMovesArray, payload: [...list] });\r\n    history.push(\"/analiza\");\r\n  };\r\n\r\n  return (\r\n    <StyledWrapper data-testid=\"home-menu\">\r\n      <HiddenInput\r\n        ref={inputRef}\r\n        type=\"file\"\r\n        onInput={(e) => new GcgReader().readReport(e, handleNewFile)}\r\n      />\r\n      <Options href=\"#\" onClick={() => inputRef.current.click()}>\r\n        Analizuj partię\r\n      </Options>\r\n      <Options onClick={() => history.push(\"/zadania\")}>\r\n        Rozwiązuj zadania\r\n      </Options>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default HomeMenu;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Board from '../organisms/Board';\r\nimport HomeMenu from '../molecules/HomeMenu';\r\n\r\nconst StyledWrapper = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\n`;\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <StyledWrapper>\r\n            <HomeMenu />\r\n            <Board />\r\n        </StyledWrapper>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nimport AppContext from \"../../context\";\r\nimport { actionTypes } from \"../../reducers/gameReducer\";\r\nimport useGetFromCurrentState from \"../../hooks/useGetFromCurrentState\";\r\nconst StyledWrapper = styled.div`\r\n  flex-grow: 1;\r\n  width: 80%;\r\n\r\n  .ui.basic.striped.table tbody .active {\r\n    background-color: #d5faddad !important;\r\n  }\r\n`;\r\n\r\nconst StyledRow = styled(Table.Row)`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Option = ({ params, selected, index }) => {\r\n  const { dispatch } = useContext(AppContext);\r\n  const {\r\n    evaluate,\r\n    coordinates,\r\n    word,\r\n    movePoints,\r\n    percent,\r\n    freeLetters,\r\n  } = params;\r\n  return (\r\n    <StyledRow\r\n      active={selected}\r\n      onClick={() =>\r\n        dispatch({ type: actionTypes.setOptionIndex, payload: index })\r\n      }\r\n    >\r\n      <Table.Cell>{evaluate}</Table.Cell>\r\n      <Table.Cell>{coordinates}</Table.Cell>\r\n      <Table.Cell>{word}</Table.Cell>\r\n      <Table.Cell>{movePoints}</Table.Cell>\r\n      <Table.Cell>{percent}</Table.Cell>\r\n      <Table.Cell>{freeLetters}</Table.Cell>\r\n    </StyledRow>\r\n  );\r\n};\r\nconst OptionsList = () => {\r\n  const { actualOptionIndex } = useContext(AppContext);\r\n  const { actualMove } = useGetFromCurrentState();\r\n  const optionsElements = actualMove.choiceOptions.map((el, i) => (\r\n    <Option key={i} index={i} params={el} selected={i === actualOptionIndex} />\r\n  ));\r\n  return (\r\n    <StyledWrapper>\r\n      <Table basic=\"very\" striped>\r\n        <Table.Header>\r\n          <Table.Row></Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>{optionsElements}</Table.Body>\r\n      </Table>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default OptionsList;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst TileSquare = styled.div`\r\n    background-color: #f8e8c7;\r\n    display: inline-block;\r\n    box-sizing: border-box;\r\n    color: #015b52;\r\n    font-size: 40px;\r\n    height: 65px;\r\n    min-width: 65px;\r\n    max-width: 65px;\r\n    line-height: 65px;\r\n    border-radius: 10%;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    font-family: Arial;\r\n    font-weight: bold;\r\n    position: relative;\r\n    margin: 6px;\r\n\r\n    ${({ played }) => played && css`\r\n        background-color: #1ae825;\r\n    `\r\n    }\r\n    ${({ blank }) => blank && css`\r\n        color: #015b5266;\r\n    `\r\n    }\r\n    ${({ transparent }) => transparent && css`\r\n        opacity: 0;\r\n    `\r\n    }\r\n`\r\n\r\nexport default TileSquare;\r\n","import styled from 'styled-components';\r\n\r\nconst TilePoints = styled.sub`\r\n    font-size: 15px;\r\n    position: absolute;\r\n    bottom: 12px;\r\n    right: 8px;\r\n`\r\n\r\nexport default TilePoints;","import React from \"react\";\r\n\r\nimport TileSquare from \"../atoms/TileSquare\";\r\nimport TilePoints from \"../atoms/TilePoints\";\r\nimport { POINTS } from \"../globalVariables\";\r\n\r\nconst Tile = ({ letter, played, onBoard, transparent }) => {\r\n  const blank = letter === letter.toLowerCase();\r\n  return (\r\n    <>\r\n      {[\"(\", \")\"].includes(letter) ? null : (\r\n        <TileSquare\r\n          played={played}\r\n          onBoard={onBoard}\r\n          transparent={transparent}\r\n          blank={blank}\r\n        >\r\n          {letter.toUpperCase()}\r\n          <TilePoints>{!blank && POINTS[letter]}</TilePoints>\r\n        </TileSquare>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Tile from \"../molecules/Tile\";\r\nimport useGetFromCurrentState from \"../../hooks/useGetFromCurrentState\";\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 500px;\r\n`;\r\n\r\nconst Rack = () => {\r\n  const { actualOption, actualMove } = useGetFromCurrentState();\r\n  if (!actualOption) return null;\r\n  const freeLetters = actualOption.freeLetters.split(\"\");\r\n\r\n  const checkAndRemoveLetter = (el) => {\r\n    const index = freeLetters.indexOf(el);\r\n    if (index !== -1) {\r\n      freeLetters.splice(index, 1);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const tiles = actualMove.letters\r\n    .split(\"\")\r\n    .map((el, i) => (\r\n      <Tile key={i} letter={el} played={checkAndRemoveLetter(el)} />\r\n    ));\r\n\r\n  return <StyledWrapper data-testid=\"rack\">{tiles}</StyledWrapper>;\r\n};\r\n\r\nexport default Rack;\r\n","import { useEffect, useContext } from \"react\";\r\n\r\nimport AppContext from \"../context\";\r\nimport { actionTypes } from \"../reducers/gameReducer\";\r\n\r\nconst useHandleKeyDown = () => {\r\n  const { dispatch } = useContext(AppContext);\r\n\r\n  const handleKeyDown = (e) => {\r\n    e.preventDefault();\r\n    if (e.keyCode === 39) dispatch({ type: actionTypes.incrementMoveIndex });\r\n    if (e.keyCode === 37) dispatch({ type: actionTypes.decrementMoveIndex });\r\n    if (e.keyCode === 38) dispatch({ type: actionTypes.decrementOptionIndex });\r\n    if (e.keyCode === 40) dispatch({ type: actionTypes.incrementOptionIndex });\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default useHandleKeyDown;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport context from \"../../context\";\r\nimport useHandleKeyDown from \"../../hooks/useHandleKeyDown\";\r\nimport { actionTypes } from \"../../reducers/gameReducer\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  margin: auto;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  min-width: 80px;\r\n  margin-left: 20px;\r\n`;\r\nconst GameNavigation = () => {\r\n  const { dispatch } = useContext(context);\r\n  useHandleKeyDown();\r\n\r\n  return (\r\n    <StyledWrapper data-testid=\"game-navigation\">\r\n      <StyledButton\r\n        color=\"teal\"\r\n        icon=\"fast backward\"\r\n        onClick={() => dispatch({ type: actionTypes.setMoveIndex, payload: 0 })}\r\n      />\r\n      <StyledButton\r\n        color=\"teal\"\r\n        icon=\"backward\"\r\n        onClick={() => dispatch({ type: actionTypes.decrementMoveIndex })}\r\n      />\r\n      <StyledButton\r\n        color=\"teal\"\r\n        icon=\"forward\"\r\n        onClick={() => dispatch({ type: actionTypes.incrementMoveIndex })}\r\n      />\r\n      <StyledButton\r\n        color=\"teal\"\r\n        icon=\"fast forward\"\r\n        onClick={() =>\r\n          dispatch({ type: actionTypes.setMoveIndex, payload: -1 })\r\n        }\r\n      />\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default GameNavigation;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n// import PropTypes from 'prop-types';\r\nimport { Divider, Grid, Segment, Item } from 'semantic-ui-react'\r\n\r\nimport context from '../../context';\r\nconst Header = styled(Item.Header)`\r\n    width: 200px;\r\n`;\r\n\r\nconst Points = styled.div`\r\n    font-size: 17px;\r\n    font-weight: bold;\r\n`;\r\nconst NewPoints = styled.div`\r\n    color: #e84717;\r\n    font-size: 11px;\r\n`;\r\n\r\nconst PlayerResult = ({ order }) => {\r\n\r\n    const { moves, actualMoveIndex, actualOptionIndex } = useContext(context);\r\n    const [playerPoints, setPlayerPoints] = useState(0);\r\n    const nick = moves[order].nick.replace('_', ' ');\r\n\r\n    useEffect(() => {\r\n        if (order === actualMoveIndex % 2) setPlayerPoints(moves[actualMoveIndex].pointsBefore);\r\n        else setPlayerPoints(moves[actualMoveIndex + 1]?.pointsBefore);\r\n    }, [actualMoveIndex, moves, order]);\r\n\r\n\r\n    return (\r\n        <Grid.Column>\r\n            <Item>\r\n                <Item.Content>\r\n                    <Header as='h3'>{nick}</Header>\r\n                    <Points>{playerPoints}</Points>\r\n                    {order === actualMoveIndex % 2 ?\r\n                        <NewPoints>+{moves[actualMoveIndex]?.choiceOptions[actualOptionIndex]?.movePoints}</NewPoints>\r\n                        :\r\n                        <NewPoints />\r\n                    }\r\n                </Item.Content>\r\n            </Item>\r\n        </Grid.Column>\r\n    )\r\n}\r\n\r\nconst Result = () => {\r\n    return (\r\n        <>\r\n            <Segment compact >\r\n                <Grid columns={2} relaxed='very' stackable textAlign='center' >\r\n                    <PlayerResult order={0} />\r\n                    <PlayerResult order={1} />\r\n                </Grid>\r\n\r\n                <Divider vertical>Vs</Divider>\r\n            </Segment>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nResult.propTypes = {\r\n\r\n};\r\n\r\n\r\nexport default Result;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Board from \"../organisms/Board\";\r\nimport OptionsList from \"../organisms/OptionsList\";\r\nimport Rack from \"../organisms/Rack\";\r\nimport GameNavigation from \"../molecules/GameNavigation\";\r\nimport Result from \"../organisms/Result\";\r\n\r\nimport AppContext from \"../../context\";\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst BoardWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 650px;\r\n  position: relative;\r\n  margin-left: 15px;\r\n  margin-top: 15px;\r\n`;\r\nconst MoveContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst GameplayAnalysed = () => {\r\n  const { actualMoveIndex } = useContext(AppContext);\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <BoardWrapper>\r\n        <Board />\r\n        <GameNavigation />\r\n      </BoardWrapper>\r\n      {actualMoveIndex !== undefined && (\r\n        <MoveContent data-testid=\"move-content\">\r\n          <Result />\r\n          <OptionsList />\r\n          <Rack />\r\n        </MoveContent>\r\n      )}\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default GameplayAnalysed;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  position: relative;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  z-index: -1;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  clip-path: polygon(81% 23%, 100% 10%, 100% 100%, 0 100%, 0 37%, 18% 30%);\r\n  background: rgb(129, 246, 166);\r\n  background: linear-gradient(\r\n    103deg,\r\n    rgba(129, 246, 166, 1) 0%,\r\n    rgba(78, 171, 107, 1) 36%,\r\n    rgba(41, 150, 75, 1) 100%\r\n  );\r\n`;\r\n\r\nconst MainTemplate = ({ children }) => {\r\n  return (\r\n    <StyledWrapper data-testid=\"main-template\">\r\n      <Background data-testid=\"main-template-background\" />\r\n      {children}\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default MainTemplate;\r\n","import React, { useReducer } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport AppContext from \"../context\";\r\nimport Home from \"../components/pages/Home\";\r\nimport GameplayAnalysed from \"../components/pages/GameplayAnalysed\";\r\nimport MainTemplate from \"../components/templates/MainTemplate\";\r\nimport { initialState, reducer } from \"../reducers/gameReducer\";\r\n\r\nconst App = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ ...state, dispatch }}>\r\n      <MainTemplate>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/gcg-report-viewer/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/zadania\">\r\n              <GameplayAnalysed />\r\n            </Route>\r\n            <Route path=\"/analiza\">\r\n              <GameplayAnalysed />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </MainTemplate>\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}