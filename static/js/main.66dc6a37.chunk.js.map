{"version":3,"sources":["services/gameService.js","reducers/gameReducer.js","context.js","components/globalVariables.js","components/atoms/BoardTile.js","components/organisms/Word.js","hooks/useGetFromCurrentState.js","components/organisms/WordsOnBoard.js","components/molecules/BoardCoordinates.js","components/molecules/Rack3d.js","hooks/useFillDeletion.js","components/molecules/Deletion.js","components/atoms/Button.js","components/organisms/FullResult/Header.js","hooks/useFullResult.js","components/organisms/FullResult/Cells.js","components/organisms/FullResult/Rows.js","components/organisms/FullResult/FullResult.js","hooks/useExportAsImage.js","hooks/useAddDiagramToBase.js","components/atoms/InputTag.js","components/organisms/NewDiagramForm.js","components/organisms/ToolButtons.js","components/organisms/hooks/useBoard.js","components/atoms/BoardField.js","components/molecules/BoardFields.js","components/organisms/KonvaBoard.js","components/organisms/Board.js","services/GcgReader.js","components/molecules/HomeMenu.js","components/pages/Home.js","components/organisms/OptionsList.js","components/atoms/TileSquare.js","components/atoms/TilePoints.js","components/molecules/Tile.js","components/organisms/hooks/useRack.js","components/organisms/Rack.js","hooks/useHandleKeyDown.js","components/molecules/GameNavigation.js","components/organisms/Result.js","components/pages/GameplayAnalysed.js","components/templates/MainTemplate.js","components/atoms/KonvaArrow.js","components/pages/hooks/useGameEntry.js","components/pages/GameEntry.js","components/App.js","index.js"],"names":["exceptCoordinates","findPlayedMove","move","choiceOptions","find","opt","coordinates","includes","findBestMove","evaluate","convertBoardWordToRack","word","replace","replaceAll","convertToBoardCoordinates","x","y","vertical","String","fromCharCode","betweenBracketsValidator","letters","bracketsPairs","findPair","i","start","indexOf","end","push","split","map","letter","undefined","index","some","pair","filter","el","initialState","moves","actualMoveIndex","actualOptionIndex","withoutNewMove","player1","player2","actionTypes","reducer","state","action","type","payload","nick","newIndex","length","AppContext","React","createContext","useAppContext","useContext","AppContextProvider","children","useReducer","dispatch","Provider","value","POINTS","A","Ą","B","C","Ć","D","E","Ę","F","G","H","I","J","K","L","Ł","M","N","Ń","O","Ó","P","R","S","Ś","T","U","W","Y","Z","Ź","Ż","FIELDS_PARAMS","word2","color","text","word3","letter2","letter3","middle","size","COLORS","BoardTile","transparent","newMove","blank","toLowerCase","TileColor","width","height","fill","cornerRadius","opacity","toUpperCase","align","fontSize","verticalAlign","fontFamily","fontStyle","Word","isNewMove","coord","join","slice","charCodeAt","verticle","setPosition","betweenBracketsArray","lettersDivs","useGetFromCurrentState","actualMove","actualOption","currentMoves","isLossMove","moveIndex","pointsBefore","WordsOnBoard","isExchange","UpCoordinates","styled","div","LeftCoordinates","CoordinateX","CoordinateY","BoardCoordinates","Array","keys","Rack3d","top","className","useFillDeletion","useState","usedLetters","setUsedLetters","useEffect","reduce","acc","StyledWrapper","DeletionLetter","onBoard","DeletionLetters","usedTiles","temporaryDeletion","splice","Deletion","setUsedTiles","StyledButton","Button","clicked","css","Header","Table","Row","HeaderCell","colSpan","textAlign","useFullResult","realMoves","deductedPoints","parseInt","movePoints","endingPlayerPoints","notEndingPlayerPoints","handleCellClick","useCallback","e","target","dataset","player","OneMoveCells","playerIndex","points","active","lastMove","Cell","Cells","Rows","onClick","style","cursor","FullResult","celled","structured","unstackable","Body","useExportAsImage","called","setCalled","stageRef","setStageRef","link","document","createElement","download","href","current","toDataURL","body","appendChild","click","removeChild","handleExport","option","useAddDiagramToBase","addDiagramCallback","diagramIsPublic","tags","a","fetch","method","headers","JSON","stringify","words","solution","then","res","id","InputTag","setTags","ReactTags","placeholder","allowDragDrop","delimiters","minQueryLength","inputFieldPosition","autofocus","editable","autocomplete","handleDelete","t","handleAddition","newTag","prev","StyledForm","Form","RadioWrapper","Group","NewDiagramForm","close","setDiagramIsPublic","handleChange","onSubmit","Radio","label","name","checked","onChange","positive","ToolButtons","fullResultIsVisible","setFullResultIsVisible","deletionIsVisible","setDeletionIsVisible","formIsVisible","setFormIsVisible","getImage","closeForm","useBoard","asBackground","boardIsFront","setBoardIsFront","useRef","setTimeout","emptyFn","BoardField","bonusType","callback","handleClick","stroke","onTap","rotation","padding","numPoints","innerRadius","outerRadius","allBonusFieldsArrays","BonusFields","coords","Fields","handleBoardClick","el2","flat","BoardFields","GameArea","KonvaBoard","contextValue","ref","plainView","Board","contextForBridgeContext","context","regActualPlayer","allRegex","letterOnBoard","GcgReader","convertTextByRegex","match","findFreeLetters","cleanMoveArray","lettersArray","forEach","pushMoveByLineToArray","line","movesArray","atoms","actualIndex","percent","freeLetters","readReport","game","files","reader","FileReader","onload","result","readAsText","Options","HiddenInput","input","HomeMenu","inputRef","navigate","useNavigate","handleNewFile","list","onInput","DummyNav","BoardWrapper","Home","StyledRow","Option","params","selected","OptionsList","optionsElements","basic","striped","TileSquare","played","TilePoints","sub","Tile","clickHandler","useRack","checkAndRemoveLetter","Tiles","RackForInput","inputValue","handleClickOnTile","Rack","useHandleKeyDown","handleKeyDown","keyCode","addEventListener","removeEventListener","GameNavigation","icon","Item","Points","NewPoints","PlayerResult","order","playerPoints","setPlayerPoints","Grid","Column","Content","as","Result","Segment","compact","columns","relaxed","stackable","Divider","MoveContent","GameplayAnalysed","Background","MainTemplate","KonvaArrow","pointerLength","pointerWidth","findPosition","startPos","distance","useGameEntry","setInputValue","setPoints","players","setPlayers","startPosition","setStartPosition","currentWord","setCurrentWord","setMoves","occupiedFields","setOccupiedFields","currentPlayer","useMemo","changeCurrentPlayer","findIndex","newPlayerIndex","addMove","prevDots","generateDots","convertedWord","finalPosition","playerName","sumPoints","curr","wordLength","convertedCoords","addOcupiedFields","handleArrowClick","back","dots","dir","nextCoordinate","field","handlePutNewLetter","isBlank","newLetter","resetCurrentWord","preventDefault","charCode","nodeName","key","wordPosition","handleOnChange","handleExchange","setName","downloadGame","array","name1","name2","rows","createTxtFromMoves","element","setAttribute","encodeURIComponent","display","InputArea","InputsWrapper","PlayerNameInput","PointsInput","ButtonsWrapper","GameEntry","onContextMenu","App","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.66dc6a37.chunk.js","sourcesContent":["const exceptCoordinates = [\"*xch\", \"xch\"];\r\n\r\nexport const isExchange = (coordinates) =>\r\n  exceptCoordinates.some((el) => el === coordinates);\r\n\r\nexport const findPlayedMove = (move) => {\r\n  return move?.choiceOptions?.find((opt) => opt.coordinates.includes(\"*\"));\r\n};\r\n\r\nexport const findBestMove = (move) => {\r\n  return move?.choiceOptions?.find((opt) => opt.evaluate === \"best\");\r\n};\r\n\r\nexport const setPosition = (coordinates) => {\r\n  const coord = coordinates\r\n    .split(\"\")\r\n    .filter((el) => el !== \"*\")\r\n    .join(\"\");\r\n  if (coord.slice(-1) !== coord.slice(-1).toLowerCase())\r\n    //horizontal\r\n    return {\r\n      x: coord.slice(-1).charCodeAt() - 65,\r\n      y: coord.slice(0, -1) - 1,\r\n      verticle: false,\r\n    };\r\n  else\r\n    return {\r\n      x: coord[0].charCodeAt() - 65,\r\n      y: coord.slice(1) - 1,\r\n      verticle: true,\r\n    };\r\n};\r\n\r\nexport const convertBoardWordToRack = (word) =>\r\n  word.replace(/[a-z,ą,ę,ć,ś,ł, ń, ó, ż,ź]/g, \"?\").replaceAll(\".\", \"\");\r\n\r\nexport const convertToBoardCoordinates = ({ x, y, vertical }) =>\r\n  vertical\r\n    ? `${String.fromCharCode(x + 65)}${y + 1}`\r\n    : `${y + 1}${String.fromCharCode(x + 65)}`;\r\n\r\nexport const isMoveWithWord = (move) =>\r\n  !exceptCoordinates.some((el) => el === move.coordinates);\r\n\r\nexport const betweenBracketsValidator = (letters) => {\r\n  const bracketsPairs = [];\r\n  const findPair = (i) => {\r\n    const start = letters.indexOf(\"(\", i);\r\n    const end = letters.indexOf(\")\", i + 1);\r\n    if (end !== -1) {\r\n      bracketsPairs.push({ start, end });\r\n      findPair(end);\r\n    }\r\n  };\r\n  findPair(0);\r\n  const isBetween = (index) =>\r\n    bracketsPairs.some((pair) => pair.start < index && pair.end > index);\r\n  const booleanArray = letters\r\n    .split(\"\")\r\n    .map((letter, i) =>\r\n      [\"(\", \")\"].includes(letter) ? undefined : isBetween(i)\r\n    )\r\n    .filter((el) => el !== undefined);\r\n  return booleanArray;\r\n};\r\n","import { findPlayedMove } from \"../services/gameService\";\r\n\r\nexport const initialState = {\r\n  moves: [],\r\n  actualMoveIndex: undefined,\r\n  actualOptionIndex: 0,\r\n  withoutNewMove: false,\r\n  player1: \"\",\r\n  player2: \"\",\r\n};\r\n\r\nexport const actionTypes = {\r\n  setMovesArray: \"SET_MOVES_ARRAY\",\r\n  setMoveIndex: \"SET_MOVE_INDEX\",\r\n  incrementMoveIndex: \"INCREMENT_MOVE_INDEX\",\r\n  decrementMoveIndex: \"DECREMENT_MOVE_INDEX\",\r\n  incrementOptionIndex: \"INCREMENT_OPTION_INDEX\",\r\n  decrementOptionIndex: \"DECREMENT_OPTION_INDEX\",\r\n  setOptionIndex: \"SET_OPTION_INDEX\",\r\n  setWithoutNewMove: \"SET_WITHOUT_NEW_MOVE\",\r\n  clearGame: \"CLEAR_GAME\",\r\n};\r\n\r\nexport function reducer(state, action) {\r\n  const { moves, actualMoveIndex, actualOptionIndex } = state;\r\n\r\n  switch (action.type) {\r\n    case actionTypes.setMovesArray:\r\n      return {\r\n        ...state,\r\n        moves: action.payload,\r\n        actualMoveIndex: 0,\r\n        actualOptionIndex: findPlayedMove(action.payload[0]).index,\r\n        player1: action.payload[0].nick.replace(\"_\", \" \"),\r\n        player2: action.payload[1].nick.replace(\"_\", \" \"),\r\n      };\r\n\r\n    case actionTypes.setMoveIndex:\r\n      const newIndex =\r\n        action.payload > -1\r\n          ? action.payload\r\n          : state.moves.length - 1 + action.payload;\r\n      return {\r\n        ...state,\r\n        actualMoveIndex: newIndex,\r\n        actualOptionIndex: findPlayedMove(moves[newIndex]).index,\r\n      };\r\n\r\n    case actionTypes.incrementMoveIndex:\r\n      if (moves.length > actualMoveIndex + 2)\r\n        return {\r\n          ...state,\r\n          actualMoveIndex: actualMoveIndex + 1,\r\n          actualOptionIndex: findPlayedMove(moves[actualMoveIndex + 1]).index,\r\n        };\r\n      else return state;\r\n\r\n    case actionTypes.decrementMoveIndex:\r\n      if (actualMoveIndex > 0)\r\n        return {\r\n          ...state,\r\n          actualMoveIndex: actualMoveIndex - 1,\r\n          actualOptionIndex: findPlayedMove(moves[actualMoveIndex - 1]).index,\r\n        };\r\n      else return state;\r\n\r\n    case actionTypes.setOptionIndex:\r\n      return { ...state, actualOptionIndex: action.payload };\r\n\r\n    case actionTypes.incrementOptionIndex:\r\n      if (actualOptionIndex + 1 < moves[actualMoveIndex].choiceOptions.length)\r\n        return { ...state, actualOptionIndex: actualOptionIndex + 1 };\r\n      else return state;\r\n\r\n    case actionTypes.decrementOptionIndex:\r\n      if (state.actualOptionIndex !== 0)\r\n        return { ...state, actualOptionIndex: state.actualOptionIndex - 1 };\r\n      else return state;\r\n\r\n    case actionTypes.setWithoutNewMove:\r\n      return { ...state, withoutNewMove: action.payload };\r\n\r\n    case actionTypes.clearGame:\r\n      return { ...initialState };\r\n  }\r\n}\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport { initialState, reducer } from \"./reducers/gameReducer\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <AppContext.Provider value={{ ...state, dispatch }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppContext;\r\n","export const BOARD_SIZE = 650;\r\n\r\nexport const POINTS = {\r\n  A: 1,\r\n  Ą: 5,\r\n  B: 3,\r\n  C: 2,\r\n  Ć: 6,\r\n  D: 2,\r\n  E: 1,\r\n  Ę: 5,\r\n  F: 5,\r\n  G: 3,\r\n  H: 3,\r\n  I: 1,\r\n  J: 3,\r\n  K: 2,\r\n  L: 2,\r\n  Ł: 3,\r\n  M: 2,\r\n  N: 1,\r\n  Ń: 7,\r\n  O: 1,\r\n  Ó: 5,\r\n  P: 2,\r\n  R: 1,\r\n  S: 1,\r\n  Ś: 5,\r\n  T: 2,\r\n  U: 3,\r\n  W: 1,\r\n  Y: 2,\r\n  Z: 1,\r\n  Ź: 9,\r\n  Ż: 5,\r\n};\r\n\r\nexport const FIELDS_PARAMS = {\r\n  word2: {\r\n    color: \"#e8b442\",\r\n    text: \"PODWÓJNA PREMIA SŁOWNA\",\r\n  },\r\n  word3: {\r\n    color: \"#c02929\",\r\n    text: \"POTRÓJNA PREMIA SŁOWNA\",\r\n  },\r\n  letter2: {\r\n    color: \"#7590c7\",\r\n    text: \"PODWÓJNA PREMIA LITEROWA\",\r\n  },\r\n  letter3: {\r\n    color: \"#0078c1\",\r\n    text: \"POTRÓJNA PREMIA LITEROWA\",\r\n  },\r\n  middle: {\r\n    color: \"#e8b442\",\r\n    text: \"\",\r\n  },\r\n};\r\n\r\nexport const word2Fields = [\r\n  [1, 1],\r\n  [2, 2],\r\n  [3, 3],\r\n  [4, 4],\r\n  [10, 10],\r\n  [11, 11],\r\n  [12, 12],\r\n  [13, 13],\r\n  [1, 13],\r\n  [2, 12],\r\n  [3, 11],\r\n  [4, 10],\r\n  [10, 4],\r\n  [11, 3],\r\n  [12, 2],\r\n  [13, 1],\r\n];\r\nexport const word3Fields = [\r\n  [0, 0],\r\n  [0, 7],\r\n  [0, 14],\r\n  [7, 0],\r\n  [7, 14],\r\n  [14, 0],\r\n  [14, 7],\r\n  [14, 14],\r\n];\r\n\r\nexport const letter2Fields = [\r\n  [0, 3],\r\n  [0, 11],\r\n  [2, 6],\r\n  [2, 8],\r\n  [3, 0],\r\n  [3, 7],\r\n  [3, 14],\r\n  [6, 2],\r\n  [6, 6],\r\n  [6, 8],\r\n  [6, 12],\r\n  [7, 3],\r\n  [7, 11],\r\n  [8, 2],\r\n  [8, 6],\r\n  [8, 8],\r\n  [8, 12],\r\n  [11, 0],\r\n  [11, 7],\r\n  [11, 14],\r\n  [12, 6],\r\n  [12, 8],\r\n  [14, 3],\r\n  [14, 11],\r\n];\r\n\r\nexport const letter3Fields = [\r\n  [1, 5],\r\n  [1, 9],\r\n  [5, 1],\r\n  [5, 5],\r\n  [5, 9],\r\n  [5, 13],\r\n  [9, 1],\r\n  [9, 5],\r\n  [9, 9],\r\n  [9, 13],\r\n  [13, 5],\r\n  [13, 9],\r\n];\r\n\r\nexport const size = 570 / 15;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Rect, Text } from \"react-konva\";\r\n\r\nimport { POINTS, size } from \"../globalVariables\";\r\n\r\nconst COLORS = {\r\n  basic: \"#f8e8c7\",\r\n  newMove: \"#1ae825\",\r\n};\r\nconst BoardTile = ({ x, y, letter, transparent, newMove }) => {\r\n  const blank = letter === letter.toLowerCase();\r\n  const TileColor = newMove ? COLORS.newMove : COLORS.basic;\r\n  return (\r\n    <>\r\n      <Rect\r\n        x={x + 1}\r\n        y={y + 1}\r\n        width={size - 2}\r\n        height={size - 2}\r\n        fill={TileColor}\r\n        cornerRadius={4}\r\n        opacity={transparent ? 0 : 1}\r\n        data-testid=\"tile\"\r\n      />\r\n      <Text\r\n        x={x}\r\n        y={y + 8}\r\n        width={size}\r\n        height={size}\r\n        fill={\"#015b52\"}\r\n        text={letter.toUpperCase()}\r\n        align=\"center\"\r\n        fontSize={25}\r\n        verticalAlign=\"center\"\r\n        fontFamily=\"Arial\"\r\n        fontStyle=\"bold\"\r\n        opacity={transparent ? 0 : blank ? 0.3 : 1}\r\n        data-testid=\"letter\"\r\n      />\r\n      <Text\r\n        x={x + size - 10}\r\n        y={y + size - 10}\r\n        width={10}\r\n        height={10}\r\n        fill={\"#015b52\"}\r\n        text={POINTS[letter]}\r\n        align=\"center\"\r\n        fontSize={9}\r\n        verticalAlign=\"center\"\r\n        fontFamily=\"Arial\"\r\n        fontStyle=\"bold\"\r\n        opacity={transparent ? 0 : 1}\r\n        data-testid=\"points\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nBoardTile.propTypes = {\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  letter: PropTypes.string,\r\n  transparent: PropTypes.bool,\r\n  newMove: PropTypes.bool,\r\n};\r\n\r\nexport default BoardTile;\r\n","import React from \"react\";\r\n\r\nimport BoardTile from \"../atoms/BoardTile\";\r\nimport {\r\n  betweenBracketsValidator,\r\n  setPosition,\r\n} from \"../../services/gameService\";\r\nimport { size } from \"../globalVariables\";\r\n\r\nconst Word = ({ isNewMove, letters, coordinates }) => {\r\n  const { x, y, verticle } = setPosition(coordinates);\r\n  const betweenBracketsArray = betweenBracketsValidator(letters);\r\n\r\n  const lettersDivs = letters\r\n    .split(\"\")\r\n    .filter((letter) => ![\"(\", \")\"].includes(letter))\r\n    .map((letter, index) => (\r\n      <BoardTile\r\n        key={index}\r\n        x={verticle ? x * size : (x + index) * size}\r\n        y={verticle ? (y + index) * size : y * size}\r\n        letter={letter}\r\n        transparent={betweenBracketsArray[index]}\r\n        newMove={isNewMove}\r\n      />\r\n    ));\r\n  return <>{lettersDivs}</>;\r\n};\r\n\r\nexport default Word;\r\n","import { useAppContext } from \"../context\";\r\n\r\nconst useGetFromCurrentState = () => {\r\n  const { moves, actualMoveIndex, actualOptionIndex } = useAppContext();\r\n\r\n  const actualMove = moves?.[actualMoveIndex];\r\n  const actualOption =\r\n    moves?.[actualMoveIndex]?.choiceOptions[actualOptionIndex];\r\n  const currentMoves = moves?.slice(0, actualMoveIndex);\r\n  const isLossMove = (moveIndex) =>\r\n    moves[moveIndex].pointsBefore === moves[moveIndex + 2].pointsBefore;\r\n  return { actualMove, actualOption, currentMoves, isLossMove };\r\n};\r\n\r\nexport default useGetFromCurrentState;\r\n","import React from \"react\";\r\n\r\nimport Word from \"./Word\";\r\nimport useGetFromCurrentState from \"../../hooks/useGetFromCurrentState\";\r\nimport { findPlayedMove, isExchange } from \"../../services/gameService\";\r\n\r\nconst WordsOnBoard = () => {\r\n  const { currentMoves, isLossMove } = useGetFromCurrentState();\r\n\r\n  return (\r\n    <>\r\n      {currentMoves.map((move, index) => {\r\n        const { word, coordinates } = findPlayedMove(move);\r\n        return isExchange(coordinates) || isLossMove(index) ? null : (\r\n          <Word key={index} letters={word} coordinates={coordinates} />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WordsOnBoard;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst UpCoordinates = styled.div`\r\n  position: absolute;\r\n  color: white;\r\n  line-height: 30px;\r\n  left: 40px;\r\n  height: 30px;\r\n  width: calc(100% - 80px);\r\n  font-size: 11px;\r\n  display: flex;\r\n`;\r\n\r\nconst LeftCoordinates = styled.div`\r\n  position: absolute;\r\n  color: white;\r\n  top: 30px;\r\n  left: 10px;\r\n  height: calc(100% - 80px);\r\n  width: 30px;\r\n  font-size: 11px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CoordinateX = styled.div`\r\n  width: calc(100% / 15);\r\n  text-align: center;\r\n`;\r\n\r\nconst CoordinateY = styled.div`\r\n  height: calc(100% / 15);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst BoardCoordinates = () => {\r\n  return (\r\n    <>\r\n      <UpCoordinates>\r\n        {[...Array(15).keys()].map((el) => (\r\n          <CoordinateX key={el}>{el + 1}</CoordinateX>\r\n        ))}\r\n      </UpCoordinates>\r\n      <LeftCoordinates>\r\n        {\"ABCDEFGHIJKLMNO\".split(\"\").map((el) => (\r\n          <CoordinateY key={el}>{el}</CoordinateY>\r\n        ))}\r\n      </LeftCoordinates>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BoardCoordinates;\r\n","import React from 'react';\r\nimport '../../css/rack.css';\r\nconst Rack3d = ({ top }) => {\r\n    return (\r\n        <>\r\n            <div className={top ? \"tridiv top\" : \"tridiv \"}>\r\n                <div className=\"scene\">\r\n                    <div className=\"shape prism-1 pri-1\">\r\n                        <div className=\"face ft\">\r\n                            <div className=\"photon-shader bcg1\"></div>\r\n                        </div>\r\n                        <div className=\"face bk\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                        <div className=\"face-wrapper rt\">\r\n                            <div className=\"face\">\r\n                                <div className=\"photon-shader bcg2\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"face-wrapper lt\">\r\n                            <div className=\"face\">\r\n                                <div className=\"photon-shader bcg2\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"face bm\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"shape cuboid-1 cub-1\">\r\n                        <div className=\"face ft\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                        <div className=\"face bk\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                        <div className=\"face rt\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                        <div className=\"face lt\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                        <div className=\"face bm\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                        <div className=\"face tp\">\r\n                            <div className=\"photon-shader bcg2\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Rack3d;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { findPlayedMove } from \"../services/gameService\";\r\nimport useGetFromCurrentState from \"./useGetFromCurrentState\";\r\nconst useFillDeletion = () => {\r\n  const [usedLetters, setUsedLetters] = useState([]);\r\n  const { currentMoves, isLossMove } = useGetFromCurrentState();\r\n  useEffect(() => {\r\n    const letters = currentMoves\r\n      .filter((el, i) => !isLossMove(i))\r\n      .map((move) => findPlayedMove(move))\r\n      .reduce(\r\n        (acc, { word }) => [\r\n          ...acc,\r\n          ...word.replaceAll(/\\([^)]+\\)/g, \"\").split(\"\"),\r\n        ],\r\n        \"\"\r\n      );\r\n    setUsedLetters([...letters]);\r\n  }, [currentMoves.length]);\r\n\r\n  return { usedLetters };\r\n};\r\n\r\nexport default useFillDeletion;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport useFillDeletion from \"../../hooks/useFillDeletion\";\r\nimport useGetFromCurrentState from \"../../hooks/useGetFromCurrentState\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 300px;\r\n  height: 300px;\r\n  user-select: none;\r\n  background-color: rgb(75, 75, 75);\r\n  z-index: 2;\r\n  top: 40px;\r\n  left: 20px;\r\n`;\r\n\r\nconst DeletionLetter = styled.div`\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  width: 30px;\r\n  height: 30px;\r\n  background-color: #f8e8c7;\r\n  border: 1px solid rgb(218, 193, 145);\r\n  color: #015b52;\r\n  border-radius: 3px;\r\n  font-size: 20px;\r\n  line-height: 30px;\r\n  opacity: ${({ onBoard }) => (onBoard ? 0.4 : 1)};\r\n`;\r\nconst LETTERS =\r\n  \"AAAAAAAAAĄBBCCCĆDDDEEEEEEEĘFGGHHIIIIIIIIJJKKKLLLŁŁMMMNNNNNŃOOOOOOÓPPPRRRRSSSSŚTTTUUWWWWYYYYZZZZZŻŹ??\";\r\n\r\nconst DeletionLetters = (usedTiles) => {\r\n  let temporaryDeletion = [...usedTiles];\r\n  return LETTERS.split(\"\").map((letter, index) => {\r\n    const onBoard = temporaryDeletion.includes(letter);\r\n    if (onBoard) temporaryDeletion.splice(temporaryDeletion.indexOf(letter), 1);\r\n    return (\r\n      <DeletionLetter key={index} onBoard={onBoard}>\r\n        {letter}\r\n      </DeletionLetter>\r\n    );\r\n  });\r\n};\r\n\r\nconst Deletion = () => {\r\n  const { actualMove } = useGetFromCurrentState();\r\n  const [usedTiles, setUsedTiles] = useState([]);\r\n  const { usedLetters } = useFillDeletion();\r\n  useEffect(() => {\r\n    setUsedTiles([...usedLetters, ...actualMove.letters]);\r\n  }, [usedLetters, actualMove]);\r\n  return (\r\n    <StyledWrapper data-testid=\"deletion\">\r\n      {DeletionLetters(usedTiles)}\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default Deletion;\r\n","import styled, { css } from \"styled-components\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  background: #f9e254 !important;\r\n  color: #03252b !important;\r\n  padding: 12px !important;\r\n  &:hover {\r\n    background-color: #779827 !important;\r\n    color: #f9e254 !important;\r\n  }\r\n  ${({ clicked }) =>\r\n    clicked &&\r\n    css`\r\n      background-color: #779827 !important;\r\n      color: #f9e254 !important;\r\n    `}\r\n`;\r\n\r\nexport default StyledButton;\r\n","import React from \"react\";\r\nimport { Table } from \"semantic-ui-react\";\r\nimport { useAppContext } from \"../../../context\";\r\n\r\nconst Header = () => {\r\n  const { player1, player2 } = useAppContext();\r\n\r\n  return (\r\n    <Table.Header>\r\n      <Table.Row>\r\n        <Table.HeaderCell colSpan=\"2\" textAlign=\"center\">\r\n          {player1}\r\n        </Table.HeaderCell>\r\n        <Table.HeaderCell colSpan=\"2\" textAlign=\"center\">\r\n          {player2}\r\n        </Table.HeaderCell>\r\n      </Table.Row>\r\n    </Table.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useCallback } from \"react\";\r\nimport { useAppContext } from \"../context\";\r\nimport { actionTypes } from \"../reducers/gameReducer\";\r\nimport { findPlayedMove } from \"../services/gameService\";\r\n\r\nconst useFullResult = () => {\r\n  const { moves, dispatch } = useAppContext();\r\n  const realMoves = moves.slice(0, moves.length - (moves.length % 2 ? 2 : 1));\r\n  const deductedPoints =\r\n    (moves[moves.length - 1].letters -\r\n      moves[moves.length - 2].pointsBefore -\r\n      parseInt(findPlayedMove(moves[moves.length - 2]).movePoints)) /\r\n    2;\r\n  const endingPlayerPoints =\r\n    parseInt(moves[moves.length - 3].pointsBefore) +\r\n    parseInt(findPlayedMove(moves[moves.length - 3]).movePoints) -\r\n    deductedPoints;\r\n  const notEndingPlayerPoints =\r\n    parseInt(moves[moves.length - 2].pointsBefore) +\r\n    parseInt(findPlayedMove(moves[moves.length - 2]).movePoints) +\r\n    deductedPoints;\r\n\r\n  const handleCellClick = useCallback((e, index) =>\r\n    dispatch({\r\n      type: actionTypes.setMoveIndex,\r\n      payload: index + parseInt(e.target.dataset.player),\r\n    })\r\n  );\r\n\r\n  return {\r\n    moves,\r\n    realMoves,\r\n    deductedPoints,\r\n    endingPlayerPoints,\r\n    notEndingPlayerPoints,\r\n    handleCellClick,\r\n  };\r\n};\r\n\r\nexport default useFullResult;\r\n","import { Table } from \"semantic-ui-react\";\r\nimport { useAppContext } from \"../../../context\";\r\nimport { findPlayedMove } from \"../../../services/gameService\";\r\n\r\nconst OneMoveCells = ({ move, playerIndex }) => {\r\n  const { actualMoveIndex } = useAppContext();\r\n\r\n  const points = parseInt(findPlayedMove(move)?.movePoints) || 0;\r\n  const active = actualMoveIndex === move.index;\r\n  const lastMove = move.pointsBefore === undefined;\r\n\r\n  return (\r\n    <>\r\n      <Table.Cell active={active} data-player={lastMove ? 0 : playerIndex}>\r\n        {lastMove ? \"\" : `+${points}`}\r\n      </Table.Cell>\r\n      <Table.Cell active={active} data-player={lastMove ? 0 : playerIndex}>\r\n        {lastMove ? \"\" : points + parseInt(move.pointsBefore)}\r\n      </Table.Cell>\r\n    </>\r\n  );\r\n};\r\nconst Cells = ({ moves }) => {\r\n  return (\r\n    <>\r\n      <OneMoveCells move={moves[0]} playerIndex={0} />\r\n      <OneMoveCells move={moves[1]} playerIndex={1} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cells;\r\n","import { Table } from \"semantic-ui-react\";\r\nimport useFullResult from \"../../../hooks/useFullResult\";\r\nimport Cells from \"./Cells\";\r\n\r\nconst Rows = () => {\r\n  const {\r\n    moves,\r\n    realMoves,\r\n    deductedPoints,\r\n    endingPlayerPoints,\r\n    notEndingPlayerPoints,\r\n    handleCellClick,\r\n  } = useFullResult();\r\n  return (\r\n    <>\r\n      {realMoves.map((move, index) => {\r\n        if (!(index % 2)) {\r\n          return (\r\n            <Table.Row\r\n              key={index}\r\n              textAlign=\"center\"\r\n              onClick={(e) => handleCellClick(e, index)}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <Cells moves={moves.slice(index, index + 2)} />\r\n            </Table.Row>\r\n          );\r\n        } else return null;\r\n      })}\r\n      <Table.Row textAlign=\"center\">\r\n        <Table.Cell data-player={0}>\r\n          {moves.length % 2 ? \"-\" : \"+\"}\r\n          {deductedPoints}\r\n        </Table.Cell>\r\n        <Table.Cell data-player={0}>\r\n          {moves.length % 2 ? endingPlayerPoints : notEndingPlayerPoints}\r\n        </Table.Cell>\r\n        <Table.Cell data-player={1}>\r\n          {moves.length % 2 ? \"+\" : \"-\"}\r\n          {deductedPoints}\r\n        </Table.Cell>\r\n        <Table.Cell data-player={1}>\r\n          {moves.length % 2 ? notEndingPlayerPoints : endingPlayerPoints}\r\n        </Table.Cell>\r\n      </Table.Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rows;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nimport Header from \"./Header\";\r\nimport Rows from \"./Rows\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  position: absolute;\r\n  width: 500px;\r\n  top: 40px;\r\n  left: 10px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst FullResult = () => {\r\n  return (\r\n    <StyledWrapper data-testid=\"full-result\">\r\n      <Table celled structured unstackable>\r\n        <Header />\r\n        <Table.Body>\r\n          <Rows />\r\n        </Table.Body>\r\n      </Table>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default FullResult;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { useAppContext } from \"../context\";\r\nimport { actionTypes } from \"../reducers/gameReducer\";\r\n\r\nconst handleExport = (stageRef) => {\r\n  const link = document.createElement(\"a\");\r\n  link.download = `image.png`;\r\n  link.href = stageRef.current.toDataURL();\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n};\r\n\r\nconst useExportAsImage = () => {\r\n  const { withoutNewMove, dispatch } = useAppContext();\r\n  const [called, setCalled] = useState(false);\r\n  const [stageRef, setStageRef] = useState(false);\r\n  useEffect(() => {\r\n    if (called) {\r\n      handleExport(stageRef);\r\n      setCalled(false);\r\n      dispatch({ type: actionTypes.setWithoutNewMove, payload: false });\r\n    }\r\n  }, [withoutNewMove, called]);\r\n\r\n  const getImage = (stageRef, option) => {\r\n    dispatch({ type: actionTypes.setWithoutNewMove, payload: option });\r\n    setCalled(true);\r\n    setStageRef(stageRef);\r\n  };\r\n  return [getImage];\r\n};\r\n\r\nexport default useExportAsImage;\r\n","import { findPlayedMove, findBestMove } from \"../services/gameService\";\r\nimport useGetFromCurrentState from \"./useGetFromCurrentState\";\r\n\r\nconst compressMovesList = (moves) =>\r\n  moves.map((move) => ({\r\n    index: move.index,\r\n    choiceOptions: findPlayedMove(move),\r\n  }));\r\n\r\nconst useAddDiagramToBase = () => {\r\n  const { currentMoves, actualMove } = useGetFromCurrentState();\r\n  const addDiagramCallback = async (diagramIsPublic, tags) => {\r\n    const id = await fetch(\"/diagram\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        diagramIsPublic,\r\n        letters: actualMove.letters,\r\n        words: JSON.stringify(compressMovesList(currentMoves)),\r\n        solution: JSON.stringify(findBestMove(actualMove)),\r\n        tags,\r\n      }),\r\n    }).then((res) => res.text());\r\n    return id;\r\n  };\r\n\r\n  return { addDiagramCallback };\r\n};\r\n\r\nexport default useAddDiagramToBase;\r\n","import React from \"react\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\n\r\nimport \"../../css/react-tag.scss\";\r\n\r\nconst InputTag = ({ tags, setTags }) => {\r\n  const handleDelete = (i) => setTags(tags.filter((t, index) => index !== i));\r\n  const handleAddition = (newTag) => setTags((prev) => [...prev, newTag]);\r\n\r\n  return (\r\n    <ReactTags\r\n      placeholder=\"dodaj tagi\"\r\n      tags={tags}\r\n      allowDragDrop={false}\r\n      delimiters={[188, 13]}\r\n      minQueryLength={0}\r\n      inputFieldPosition=\"bottom\"\r\n      autofocus={true}\r\n      editable={true}\r\n      autocomplete\r\n      handleDelete={handleDelete}\r\n      handleAddition={handleAddition}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputTag;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport useAddDiagramToBase from \"../../hooks/useAddDiagramToBase\";\r\nimport InputTag from \"../atoms/InputTag\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  position: absolute;\r\n  width: 360px;\r\n  backdrop-filter: blur(2px) saturate(152%);\r\n  -webkit-backdrop-filter: blur(2px) saturate(152%);\r\n  background-color: rgba(60, 161, 92, 0.85);\r\n  border-radius: 12px;\r\n  // border: 1px solid rgba(255, 255, 255, 0.125);\r\n  // border: 3px solid #06912c;\r\n  z-index: 10;\r\n  top: 50%;\r\n  left: 50vw;\r\n  padding: 15px;\r\n  transform: translate(-50%, -50%);\r\n  box-shadow: rgba(0, 0, 0, 0.8) 0px 18px 50px -10px;\r\n\r\n  button.positive {\r\n    background-color: #03252b !important;\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst RadioWrapper = styled(Form.Group)`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst NewDiagramForm = ({ close }) => {\r\n  const [tags, setTags] = useState([]);\r\n  const [diagramIsPublic, setDiagramIsPublic] = useState(false);\r\n  const [diagramId, setDiagramId] = useState(\"\");\r\n  const { addDiagramCallback } = useAddDiagramToBase();\r\n\r\n  const handleChange = (e, { value }) => setDiagramIsPublic(value);\r\n  const handleSubmit = () => {\r\n    addDiagramCallback(diagramIsPublic, tags);\r\n    close();\r\n  };\r\n  const addDiagram = () =>\r\n    addDiagramCallback().then((res) => setDiagramId(res));\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <StyledForm onSubmit={handleSubmit}>\r\n        <RadioWrapper>\r\n          <Form.Radio\r\n            label=\"publiczne\"\r\n            name=\"radioGroup\"\r\n            value={true}\r\n            checked={diagramIsPublic}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Radio\r\n            label=\"prywatne\"\r\n            name=\"radioGroup\"\r\n            value={false}\r\n            checked={!diagramIsPublic}\r\n            onChange={handleChange}\r\n          />\r\n        </RadioWrapper>\r\n        <InputTag tags={tags} setTags={setTags} />\r\n        <Form.Button positive type=\"submit\">\r\n          Zapisz\r\n        </Form.Button>\r\n      </StyledForm>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default NewDiagramForm;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Deletion from \"../molecules/Deletion\";\r\nimport Button from \"../atoms/Button\";\r\nimport FullResult from \"../organisms/FullResult/FullResult\";\r\nimport useExportAsImage from \"../../hooks/useExportAsImage\";\r\nimport ModalWithDiagramId from \"../molecules/ModalWithDiagramId\";\r\nimport NewDiagramForm from \"./NewDiagramForm\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  width: 660px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ToolButtons = ({ stageRef }) => {\r\n  const [fullResultIsVisible, setFullResultIsVisible] = useState(false);\r\n  const [deletionIsVisible, setDeletionIsVisible] = useState(false);\r\n  const [formIsVisible, setFormIsVisible] = useState(false);\r\n\r\n  const [getImage] = useExportAsImage();\r\n\r\n  const toggleDeletion = () => setDeletionIsVisible((prev) => !prev);\r\n  const toggleFullResult = () => setFullResultIsVisible((prev) => !prev);\r\n  const toggleForm = () => setFormIsVisible((prev) => !prev);\r\n  const closeForm = useCallback(() => setFormIsVisible(false), []);\r\n\r\n  const getImageBefore = () => getImage(stageRef, true);\r\n  const getImageAfter = () => getImage(stageRef, false);\r\n\r\n  return (\r\n    <StyledWrapper data-testid=\"buttons-wrapper\">\r\n      <Button onClick={toggleDeletion} clicked={deletionIsVisible}>\r\n        Wykreślanka\r\n      </Button>\r\n      <Button onClick={toggleFullResult} clicked={fullResultIsVisible}>\r\n        Pełny zapis\r\n      </Button>\r\n      <Button onClick={getImageBefore}>Zapisz obraz (przed)</Button>\r\n      <Button onClick={getImageAfter}>Zapisz obraz (po)</Button>\r\n      <Button onClick={toggleForm}>Dodaj jako zadanie</Button>\r\n      {deletionIsVisible ? <Deletion /> : null}\r\n      {fullResultIsVisible ? <FullResult /> : null}\r\n      {formIsVisible ? <NewDiagramForm close={closeForm} /> : null}\r\n      {/* {diagramId ? (\r\n        <ModalWithDiagramId id={diagramId} closeCallback={closeDiagram} />\r\n      ) : null} */}\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default ToolButtons;\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { useAppContext } from \"../../../context\";\r\nimport useGetFromCurrentState from \"../../../hooks/useGetFromCurrentState\";\r\n\r\nconst useBoard = (asBackground) => {\r\n  const { moves, withoutNewMove } = useAppContext();\r\n  const [boardIsFront, setBoardIsFront] = useState(false);\r\n  const { actualOption } = useGetFromCurrentState();\r\n\r\n  const stageRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!asBackground) setTimeout(() => setBoardIsFront(true), 1000);\r\n  }, [asBackground]);\r\n\r\n  return { moves, withoutNewMove, boardIsFront, actualOption, stageRef };\r\n};\r\n\r\nexport default useBoard;\r\n","import React from \"react\";\r\nimport { Rect, Text, Star } from \"react-konva\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FIELDS_PARAMS, size } from \"../globalVariables\";\r\n\r\nconst emptyFn = () => {};\r\nconst BoardField = ({ x, y, bonusType, callback = emptyFn }) => {\r\n  const handleClick = () => callback(x, y);\r\n  return (\r\n    <>\r\n      <Rect\r\n        x={x * size}\r\n        y={y * size}\r\n        width={size}\r\n        height={size}\r\n        fill=\"#08763b\"\r\n        stroke=\"#badce9\"\r\n        data-testid=\"board-field\"\r\n        onClick={handleClick}\r\n        onTap={handleClick}\r\n      />\r\n      {bonusType ? (\r\n        <>\r\n          <Rect\r\n            x={x * size + size / 2}\r\n            y={y * size - size / 4 + 1}\r\n            width={size}\r\n            height={size}\r\n            fill={FIELDS_PARAMS[bonusType].color}\r\n            rotation={45}\r\n            data-testid=\"rotated-rect\"\r\n          />\r\n          <Rect\r\n            x={x * size}\r\n            y={y * size}\r\n            width={size}\r\n            height={size}\r\n            fill={FIELDS_PARAMS[bonusType].color}\r\n            stroke=\"#badce9\"\r\n            onClick={handleClick}\r\n            onTap={handleClick}\r\n          />\r\n          <Text\r\n            x={x * size}\r\n            y={y * size + 8}\r\n            width={size}\r\n            height={size}\r\n            text={FIELDS_PARAMS[bonusType].text}\r\n            align=\"center\"\r\n            fontSize={7}\r\n            verticalAlign=\"center\"\r\n            fontFamily=\"Calibri\"\r\n            padding={1}\r\n            onClick={handleClick}\r\n            onTap={handleClick}\r\n          />\r\n          {bonusType === \"middle\" && (\r\n            <Star\r\n              x={x * size + size / 2}\r\n              y={y * size + size / 2}\r\n              numPoints={8}\r\n              innerRadius={size / 6}\r\n              outerRadius={size / 4}\r\n              fill=\"#DC9C10\"\r\n              opacity={1}\r\n              data-testid=\"star\"\r\n              onClick={handleClick}\r\n            />\r\n          )}\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nBoardField.propTypes = {\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  bonusType: PropTypes.string,\r\n};\r\n\r\nexport default BoardField;\r\n","import React from \"react\";\r\n\r\nimport BoardField from \"../atoms/BoardField\";\r\nimport {\r\n  word2Fields,\r\n  word3Fields,\r\n  letter2Fields,\r\n  letter3Fields,\r\n} from \"../globalVariables\";\r\n\r\nconst allBonusFieldsArrays = [\r\n  [word2Fields, \"word2\"],\r\n  [word3Fields, \"word3\"],\r\n  [letter2Fields, \"letter2\"],\r\n  [letter3Fields, \"letter3\"],\r\n  [[[7, 7]], \"middle\"],\r\n];\r\nconst emptyFn = () => {};\r\n\r\nconst BonusFields = ({ coords, type, callback }) =>\r\n  coords.map((el) => (\r\n    <BoardField\r\n      key={el}\r\n      x={el[0]}\r\n      y={el[1]}\r\n      bonusType={type}\r\n      callback={callback}\r\n    />\r\n  ));\r\n\r\nconst Fields = (handleBoardClick) => {\r\n  return [...Array(15).keys()]\r\n    .map((el) =>\r\n      [...Array(15).keys()].map((el2) => (\r\n        <BoardField\r\n          key={`${el}${el}${el2}`}\r\n          x={el}\r\n          y={el2}\r\n          callback={handleBoardClick}\r\n        />\r\n      ))\r\n    )\r\n    .flat();\r\n};\r\n\r\nconst BoardFields = ({ handleBoardClick = emptyFn }) => {\r\n  return (\r\n    <>\r\n      {Fields(handleBoardClick)}\r\n      {allBonusFieldsArrays.map((el) => (\r\n        <BonusFields coords={el[0]} type={el[1]} callback={handleBoardClick} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BoardFields;\r\n","import React from \"react\";\r\nimport { Layer, Rect, Stage } from \"react-konva\";\r\nimport styled from \"styled-components\";\r\n\r\nimport AppContext from \"../../context\";\r\nimport BoardFields from \"../molecules/BoardFields\";\r\n\r\nexport const GameArea = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 40px;\r\n  height: calc(100% - 80px);\r\n  width: calc(100% - 80px);\r\n\r\n  canvas {\r\n    background: red;\r\n    z-index: 10;\r\n  }\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    background-color: #c02929;\r\n    width: calc(100% / 15);\r\n    height: calc(100% / 15);\r\n    transform: rotate(45deg);\r\n    left: 30x;\r\n    box-shadow: 80px 80px #7590c7, 188px 188px #c02929, 294px 294px #7590c7,\r\n      376px 376px #c02929, 80px -80px #7590c7, 188px -188px #c02929,\r\n      296px -296px #7590c7, 376px -376px #c02929, 456px -297px #7590c7,\r\n      564px -189px #c02929, 673px -80px #7590c7, 752px 0px #c02929,\r\n      673px 80px #7590c7, 564px 189px #c02929, 456px 297px #7590c7;\r\n  }\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    box-shadow: 0px 0px 0px 1px #badce9;\r\n  }\r\n`;\r\n\r\nconst KonvaBoard = ({\r\n  stageRef = {},\r\n  contextValue,\r\n  children,\r\n  handleBoardClick = () => {},\r\n}) => {\r\n  return (\r\n    <GameArea>\r\n      <Stage width={570} height={570} ref={stageRef}>\r\n        <AppContext.Provider value={contextValue}>\r\n          <Layer\r\n            // fill=\"#08763b\"\r\n            fill=\"#111\"\r\n          >\r\n            <Rect width={570} height={570} fill=\"#08763b\" />\r\n            <BoardFields handleBoardClick={handleBoardClick} />\r\n            {children}\r\n          </Layer>\r\n        </AppContext.Provider>\r\n      </Stage>\r\n    </GameArea>\r\n  );\r\n};\r\n\r\nexport default KonvaBoard;\r\n","import React, { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport Word from \"./Word\";\r\nimport WordsOnBoard from \"./WordsOnBoard\";\r\nimport BoardCoordinates from \"../molecules/BoardCoordinates\";\r\nimport Rack3d from \"../molecules/Rack3d\";\r\nimport ToolButtons from \"../organisms/ToolButtons\";\r\nimport context from \"../../context\";\r\nimport { isMoveWithWord } from \"../../services/gameService\";\r\nimport useBoard from \"./hooks/useBoard\";\r\nimport KonvaBoard from \"./KonvaBoard\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  min-width: 650px;\r\n  height: 650px;\r\n  width: 650px;\r\n  box-sizing: content-box;\r\n  background-color: #08763b;\r\n  border: 3px solid rgb(34, 51, 51);\r\n  transform: translateX(65%) perspective(1000px) rotateX(70deg) rotateZ(-45deg);\r\n  transform-style: preserve-3d;\r\n  transition: 1s linear;\r\n  -webkit-transition: 1s linear;\r\n\r\n  ${({ plainView }) =>\r\n    plainView &&\r\n    css`\r\n      transform: rotateX(720deg);\r\n    `}\r\n`;\r\n\r\nconst Board = ({ asBackground = false }) => {\r\n  const { moves, withoutNewMove, boardIsFront, actualOption, stageRef } =\r\n    useBoard(asBackground);\r\n  const contextForBridgeContext = useContext(context);\r\n  return (\r\n    <>\r\n      {moves?.length ? <ToolButtons stageRef={stageRef} /> : null}\r\n      <StyledWrapper plainView={boardIsFront} data-testid=\"board\">\r\n        {asBackground ? (\r\n          <>\r\n            <Rack3d />\r\n            <Rack3d top />\r\n          </>\r\n        ) : null}\r\n        <BoardCoordinates />\r\n        <KonvaBoard contextValue={contextForBridgeContext} stageRef={stageRef}>\r\n          {actualOption ? <WordsOnBoard /> : null}\r\n          {!withoutNewMove && actualOption && isMoveWithWord(actualOption) ? (\r\n            <Word\r\n              letters={actualOption.word}\r\n              coordinates={actualOption.coordinates}\r\n              isNewMove\r\n            />\r\n          ) : null}\r\n        </KonvaBoard>\r\n      </StyledWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","const regActualPlayer = /->(\\s*.*)/gi;\r\nconst allRegex = /(->(\\s*.*))| ((best)|(\\d+\\.\\d*))(.*)/gi;\r\nconst letterOnBoard = /\\([^\\)]+\\)/g;\r\nconst blank = /[a-z ąęóśłżźćń]/g;\r\nclass GcgReader {\r\n  convertTextByRegex = (text) => text.match(allRegex);\r\n\r\n  findFreeLetters = (move, letters) => {\r\n    const cleanMoveArray = move\r\n      .replace(letterOnBoard, \"\")\r\n      .replace(blank, \"?\")\r\n      .split(\"\");\r\n    const lettersArray = letters.split(\"\");\r\n    cleanMoveArray.forEach((letter) =>\r\n      lettersArray.splice(lettersArray.indexOf(letter), 1)\r\n    );\r\n    return lettersArray.join(\"\");\r\n  };\r\n\r\n  pushMoveByLineToArray = (line, movesArray) => {\r\n    const atoms = line\r\n      .replace(/\\*/g, \" *\")\r\n      .split(/\\s+/)\r\n      .filter((el) => el !== \"\");\r\n\r\n    //add played move\r\n    if (line.match(regActualPlayer)) {\r\n      movesArray.push({\r\n        index: movesArray.length,\r\n        nick: atoms[1],\r\n        letters: atoms[2],\r\n        pointsBefore: atoms[3],\r\n        move: line,\r\n        choiceOptions: [],\r\n      });\r\n    }\r\n    //add option to move\r\n    else {\r\n      const actualIndex = movesArray.length - 1;\r\n      movesArray[actualIndex].choiceOptions.push({\r\n        index: movesArray[actualIndex].choiceOptions.length,\r\n        evaluate: atoms[0],\r\n        coordinates: atoms[1],\r\n        word: atoms[2],\r\n        movePoints: atoms[3],\r\n        percent:\r\n          atoms.length > 4\r\n            ? atoms[4][atoms[4].length - 1] === \"%\"\r\n              ? atoms[4]\r\n              : \"0%\"\r\n            : \"\",\r\n        freeLetters: this.findFreeLetters(\r\n          atoms[2],\r\n          movesArray[actualIndex].letters\r\n        ),\r\n      });\r\n    }\r\n  };\r\n  readReport = (e, callback) => {\r\n    const movesArray = [];\r\n    const game = e.target.files[0];\r\n    if (!game) return 0;\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const lines = this.convertTextByRegex(e.target.result);\r\n      lines.forEach((line) => this.pushMoveByLineToArray(line, movesArray));\r\n      callback(movesArray);\r\n    };\r\n    reader.readAsText(game);\r\n  };\r\n}\r\n\r\nexport default GcgReader;\r\n","import React, { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport GcgReader from \"../../services/GcgReader\";\r\nimport { useAppContext } from \"../../context\";\r\nimport { actionTypes } from \"../../reducers/gameReducer\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: absolute;\r\n  height: 200px;\r\n  line-height: 200px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Options = styled.a`\r\n  font-size: 35px;\r\n  display: block;\r\n  color: #3c4a3e;\r\n  text-transform: uppercase;\r\n  position: relative;\r\n  margin-left: 25px;\r\n  margin-right: 25px;\r\n  &:visited {\r\n    color: #3c4a3e;\r\n  }\r\n  &:hover {\r\n    color: #96b364;\r\n  }\r\n\r\n  &:hover:before {\r\n    opacity: 1;\r\n    width: 200px;\r\n  }\r\n\r\n  &:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    width: 130px;\r\n    height: 2px;\r\n    background: #3c4a3e;\r\n    bottom: 70px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    opacity: 0;\r\n    transition: 0.4s;\r\n  }\r\n  &:first-of-type::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 3px;\r\n    height: 80px;\r\n    transform: rotate(15deg);\r\n    background: #3c4a3e;\r\n    top: 60px;\r\n    right: -25px;\r\n  }\r\n`;\r\nconst HiddenInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst HomeMenu = () => {\r\n  const { dispatch } = useAppContext();\r\n  const inputRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleNewFile = (list) => {\r\n    dispatch({ type: actionTypes.setMovesArray, payload: [...list] });\r\n    navigate(\"/analiza\");\r\n  };\r\n\r\n  return (\r\n    <StyledWrapper data-testid=\"home-menu\">\r\n      <HiddenInput\r\n        ref={inputRef}\r\n        type=\"file\"\r\n        onInput={(e) => new GcgReader().readReport(e, handleNewFile)}\r\n      />\r\n      <Options href=\"#\" onClick={() => inputRef.current.click()}>\r\n        Analizuj partię\r\n      </Options>\r\n      <Options onClick={() => navigate(\"/dodaj-zapis\")}>\r\n        Rozwiązuj zadania\r\n      </Options>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default HomeMenu;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Board from \"../organisms/Board\";\r\nimport HomeMenu from \"../molecules/HomeMenu\";\r\nimport { useEffect } from \"react\";\r\nimport { useAppContext } from \"../../context\";\r\nimport { actionTypes } from \"../../reducers/gameReducer\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\nconst DummyNav = styled.div`\r\n  height: 38px;\r\n  width: 200px;\r\n  color: white;\r\n`;\r\n\r\nconst BoardWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 15px;\r\n  margin-top: 15px;\r\n`;\r\nconst Home = () => {\r\n  const { dispatch } = useAppContext();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: actionTypes.clearGame });\r\n  }, []);\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <HomeMenu />\r\n      <BoardWrapper>\r\n        <DummyNav />\r\n        <Board asBackground />\r\n      </BoardWrapper>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nimport AppContext, { useAppContext } from \"../../context\";\r\nimport { actionTypes } from \"../../reducers/gameReducer\";\r\nimport useGetFromCurrentState from \"../../hooks/useGetFromCurrentState\";\r\nconst StyledWrapper = styled.div`\r\n  flex-grow: 1;\r\n  width: 80%;\r\n\r\n  .ui.basic.striped.table tbody .active {\r\n    background-color: #d5faddad !important;\r\n  }\r\n`;\r\n\r\nconst StyledRow = styled(Table.Row)`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Option = ({ params, selected, index }) => {\r\n  const { dispatch } = useAppContext();\r\n  const { evaluate, coordinates, word, movePoints, percent, freeLetters } =\r\n    params;\r\n  return (\r\n    <StyledRow\r\n      active={selected}\r\n      onClick={() =>\r\n        dispatch({ type: actionTypes.setOptionIndex, payload: index })\r\n      }\r\n    >\r\n      <Table.Cell>{evaluate}</Table.Cell>\r\n      <Table.Cell>{coordinates}</Table.Cell>\r\n      <Table.Cell>{word}</Table.Cell>\r\n      <Table.Cell>{movePoints}</Table.Cell>\r\n      <Table.Cell>{percent}</Table.Cell>\r\n      <Table.Cell>{freeLetters}</Table.Cell>\r\n    </StyledRow>\r\n  );\r\n};\r\nconst OptionsList = () => {\r\n  const { actualOptionIndex } = useAppContext();\r\n  const { actualMove } = useGetFromCurrentState();\r\n  const optionsElements = actualMove.choiceOptions.map((el, i) => (\r\n    <Option key={i} index={i} params={el} selected={i === actualOptionIndex} />\r\n  ));\r\n  return (\r\n    <StyledWrapper>\r\n      <Table basic=\"very\" striped unstackable>\r\n        <Table.Header>\r\n          <Table.Row></Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>{optionsElements}</Table.Body>\r\n      </Table>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default OptionsList;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst TileSquare = styled.div`\r\n    background-color: #f8e8c7;\r\n    display: inline-block;\r\n    box-sizing: border-box;\r\n    color: #015b52;\r\n    font-size: 40px;\r\n    height: 65px;\r\n    min-width: 65px;\r\n    max-width: 65px;\r\n    line-height: 65px;\r\n    border-radius: 10%;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    font-family: Arial;\r\n    font-weight: bold;\r\n    position: relative;\r\n    margin: 6px;\r\n\r\n    ${({ played }) => played && css`\r\n        background-color: #1ae825;\r\n    `\r\n    }\r\n    ${({ blank }) => blank && css`\r\n        color: #015b5266;\r\n    `\r\n    }\r\n    ${({ transparent }) => transparent && css`\r\n        opacity: 0;\r\n    `\r\n    }\r\n`\r\n\r\nexport default TileSquare;\r\n","import styled from 'styled-components';\r\n\r\nconst TilePoints = styled.sub`\r\n    font-size: 15px;\r\n    position: absolute;\r\n    bottom: 12px;\r\n    right: 8px;\r\n`\r\n\r\nexport default TilePoints;","import React from \"react\";\r\n\r\nimport TileSquare from \"../atoms/TileSquare\";\r\nimport TilePoints from \"../atoms/TilePoints\";\r\nimport { POINTS } from \"../globalVariables\";\r\n\r\nconst Tile = ({ letter, played, onBoard, transparent, clickHandler }) => {\r\n  const blank = letter === letter.toLowerCase();\r\n  const handleClick = () => clickHandler?.(letter);\r\n  return (\r\n    <>\r\n      {[\"(\", \")\"].includes(letter) ? null : (\r\n        <TileSquare\r\n          played={played}\r\n          onBoard={onBoard}\r\n          transparent={transparent}\r\n          blank={blank}\r\n          onClick={handleClick}\r\n        >\r\n          {letter.toUpperCase()}\r\n          <TilePoints>{!blank && POINTS[letter]}</TilePoints>\r\n        </TileSquare>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import useGetFromCurrentState from \"../../../hooks/useGetFromCurrentState\";\r\n\r\nconst useRack = () => {\r\n  const { actualOption, actualMove } = useGetFromCurrentState();\r\n  if (!actualOption) return null;\r\n  const freeLetters = actualOption.freeLetters.split(\"\");\r\n\r\n  const checkAndRemoveLetter = (el) => {\r\n    const index = freeLetters.indexOf(el);\r\n    if (index !== -1) {\r\n      freeLetters.splice(index, 1);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const letters = actualMove.letters\r\n    .split(\"\")\r\n    .map((el) => ({ letter: el, played: checkAndRemoveLetter(el) }));\r\n\r\n  return { letters };\r\n};\r\n\r\nexport default useRack;\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Tile from \"../molecules/Tile\";\r\nimport useRack from \"./hooks/useRack\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Tiles = ({ letters, clickHandler }) =>\r\n  letters.map(({ letter, played }, i) => (\r\n    <Tile key={i} letter={letter} played={played} clickHandler={clickHandler} />\r\n  ));\r\n\r\nconst Rack = () => {\r\n  const { letters } = useRack();\r\n\r\n  return (\r\n    <StyledWrapper data-testid=\"rack\">\r\n      <Tiles letters={letters} />\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport const RackForInput = ({ inputValue, handleClickOnTile }) => {\r\n  const letters = inputValue\r\n    .toUpperCase()\r\n    .split(\"\")\r\n    .map((el) => ({ letter: el, played: false }));\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <Tiles letters={letters} clickHandler={handleClickOnTile} />\r\n    </StyledWrapper>\r\n  );\r\n};\r\nexport default Rack;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { useAppContext } from \"../context\";\r\nimport { actionTypes } from \"../reducers/gameReducer\";\r\n\r\nconst useHandleKeyDown = () => {\r\n  const { dispatch } = useAppContext();\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.keyCode === 39) dispatch({ type: actionTypes.incrementMoveIndex });\r\n    if (e.keyCode === 37) dispatch({ type: actionTypes.decrementMoveIndex });\r\n    if (e.keyCode === 38) dispatch({ type: actionTypes.decrementOptionIndex });\r\n    if (e.keyCode === 40) dispatch({ type: actionTypes.incrementOptionIndex });\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default useHandleKeyDown;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport  { useAppContext } from \"../../context\";\r\nimport useHandleKeyDown from \"../../hooks/useHandleKeyDown\";\r\nimport { actionTypes } from \"../../reducers/gameReducer\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  margin: auto;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  min-width: 80px;\r\n  margin-left: 20px;\r\n  background-color: #03252b !important;\r\n  color: #f9e254 !important;\r\n\r\n  &:hover {\r\n    background-color: #779827 !important;\r\n    color: #3b4b2e !important;\r\n  }\r\n`;\r\n\r\nconst GameNavigation = () => {\r\n  const {dispatch } = useAppContext();\r\n  useHandleKeyDown();\r\n\r\n  const handleFastBackward = () =>\r\n    dispatch({ type: actionTypes.setMoveIndex, payload: 0 });\r\n  const handleBackward = () =>\r\n    dispatch({ type: actionTypes.decrementMoveIndex });\r\n  const handleForward = () =>\r\n    dispatch({ type: actionTypes.incrementMoveIndex });\r\n  const handleFastForward = () =>\r\n    dispatch({ type: actionTypes.setMoveIndex, payload: -1 });\r\n\r\n  return (\r\n    <StyledWrapper data-testid=\"game-navigation\">\r\n      <StyledButton icon=\"fast backward\" onClick={handleFastBackward} />\r\n      <StyledButton icon=\"backward\" onClick={handleBackward} />\r\n      <StyledButton icon=\"forward\" onClick={handleForward} />\r\n      <StyledButton icon=\"fast forward\" onClick={handleFastForward} />\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default GameNavigation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n// import PropTypes from 'prop-types';\r\nimport { Divider, Grid, Segment, Item } from \"semantic-ui-react\";\r\n\r\nimport { useAppContext } from \"../../context\";\r\nconst Header = styled(Item.Header)`\r\n  width: 200px;\r\n`;\r\n\r\nconst Points = styled.div`\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n`;\r\nconst NewPoints = styled.div`\r\n  color: #e84717;\r\n  font-size: 11px;\r\n`;\r\n\r\nconst PlayerResult = ({ order }) => {\r\n  const { moves, actualMoveIndex, actualOptionIndex } = useAppContext();\r\n  const [playerPoints, setPlayerPoints] = useState(0);\r\n  const nick = moves[order].nick.replace(\"_\", \" \");\r\n\r\n  useEffect(() => {\r\n    if (order === actualMoveIndex % 2)\r\n      setPlayerPoints(moves[actualMoveIndex].pointsBefore);\r\n    else setPlayerPoints(moves[actualMoveIndex + 1]?.pointsBefore);\r\n  }, [actualMoveIndex, moves, order]);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Item>\r\n        <Item.Content>\r\n          <Header as=\"h3\">{nick}</Header>\r\n          <Points>{playerPoints}</Points>\r\n          {order === actualMoveIndex % 2 ? (\r\n            <NewPoints>\r\n              +\r\n              {\r\n                moves[actualMoveIndex]?.choiceOptions[actualOptionIndex]\r\n                  ?.movePoints\r\n              }\r\n            </NewPoints>\r\n          ) : (\r\n            <NewPoints />\r\n          )}\r\n        </Item.Content>\r\n      </Item>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nconst Result = () => {\r\n  return (\r\n    <>\r\n      <Segment compact>\r\n        <Grid columns={2} relaxed=\"very\" stackable textAlign=\"center\">\r\n          <PlayerResult order={0} />\r\n          <PlayerResult order={1} />\r\n        </Grid>\r\n\r\n        <Divider vertical>Vs</Divider>\r\n      </Segment>\r\n    </>\r\n  );\r\n};\r\n\r\nResult.propTypes = {};\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Board from \"../organisms/Board\";\r\nimport OptionsList from \"../organisms/OptionsList\";\r\nimport Rack from \"../organisms/Rack\";\r\nimport GameNavigation from \"../molecules/GameNavigation\";\r\nimport Result from \"../organisms/Result\";\r\nimport { useAppContext } from \"../../context\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst BoardWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 650px;\r\n  position: relative;\r\n  margin-left: 15px;\r\n  margin-top: 15px;\r\n`;\r\nconst MoveContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n  margin-top: 15px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst GameplayAnalysed = () => {\r\n  const { actualMoveIndex } = useAppContext();\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <BoardWrapper>\r\n        <Board />\r\n        <GameNavigation />\r\n      </BoardWrapper>\r\n      {actualMoveIndex !== undefined ? (\r\n        <MoveContent data-testid=\"move-content\">\r\n          <Result />\r\n          <OptionsList />\r\n          <Rack />\r\n        </MoveContent>\r\n      ) : null}\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default GameplayAnalysed;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  position: relative;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  z-index: -1;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  clip-path: polygon(81% 23%, 100% 10%, 100% 100%, 0 100%, 0 37%, 18% 30%);\r\n  background: rgb(129, 246, 166);\r\n  background: linear-gradient(\r\n    103deg,\r\n    rgba(129, 246, 166, 1) 0%,\r\n    rgba(78, 171, 107, 1) 36%,\r\n    rgba(41, 150, 75, 1) 100%\r\n  );\r\n`;\r\n\r\nconst MainTemplate = ({ children }) => {\r\n  return (\r\n    <StyledWrapper data-testid=\"main-template\">\r\n      <Background data-testid=\"main-template-background\" />\r\n      {children}\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default MainTemplate;\r\n","import React from \"react\";\r\nimport { Arrow } from \"react-konva\";\r\n\r\nimport { size } from \"../globalVariables\";\r\n\r\nconst KonvaArrow = ({ x, y, vertical = true, callback }) => {\r\n  return (\r\n    <Arrow\r\n      x={x * size + size / 2 + (vertical ? 0 : 10)}\r\n      y={y * size + size / 2 + (vertical ? 10 : 0)}\r\n      rotation={vertical ? 90 : 0}\r\n      pointerLength={20}\r\n      pointerWidth={20}\r\n      fill=\"yellow\"\r\n      opacity={0.8}\r\n      onClick={callback}\r\n      onTap={callback}\r\n    />\r\n  );\r\n};\r\n\r\nexport default KonvaArrow;\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  convertToBoardCoordinates,\r\n  convertBoardWordToRack,\r\n} from \"../../../services/gameService\";\r\n\r\nconst createTxtFromMoves = (array) => {\r\n  const name1 = array[0].player;\r\n  const name2 = array[1].player;\r\n  const rows = array.map(\r\n    (el) =>\r\n      `>${el.player}: ${el.letters} ${el.coordinates} ${el.word.replace(\r\n        /[\\(,\\)]/g,\r\n        \"\"\r\n      )} +${el.points} ${el.sumPoints} `\r\n  );\r\n\r\n  const file = `#character-encoding UTF-8\r\n#player1 ${name1} ${name1}\r\n#player2 ${name2} ${name2}\r\n${rows.join(\"\\r\\n\")}`;\r\n  return file;\r\n};\r\n\r\nconst findPosition = (startPos, distance) =>\r\n  startPos.vertical\r\n    ? { x: startPos.x, y: startPos.y + distance }\r\n    : { y: startPos.y, x: startPos.x + distance };\r\n\r\nconst useGameEntry = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [points, setPoints] = useState(\"\");\r\n  const [players, setPlayers] = useState([\r\n    { name: \"player_1\", current: true, letters: \"\" },\r\n    { name: \"player_2\", current: false, letters: \"\" },\r\n  ]);\r\n  const [startPosition, setStartPosition] = useState({\r\n    x: 5,\r\n    y: 5,\r\n    vertical: true,\r\n  });\r\n  const [currentWord, setCurrentWord] = useState(\"\");\r\n  const [moves, setMoves] = useState([]);\r\n  const [occupiedFields, setOccupiedFields] = useState([]);\r\n  const currentPlayer = useMemo(\r\n    () => players.find((el) => el.current),\r\n    [players, moves.length]\r\n  );\r\n\r\n  const addOcupiedFields = (startPos, wordLength) => {\r\n    const convertedCoords = Array(wordLength)\r\n      .fill({})\r\n      .map((el, i) => findPosition(startPos, i));\r\n    setOccupiedFields((prev) => [...prev, ...convertedCoords]);\r\n  };\r\n\r\n  const changeCurrentPlayer = () => {\r\n    const playerIndex = players.findIndex((player) => player.current); //zrobione w ten sposób na wypadek, gdyby kiedyś miałą być dodana obsługa >=3 graczy\r\n    players[playerIndex] = {\r\n      ...players[playerIndex],\r\n      current: false,\r\n      letters: inputValue,\r\n    };\r\n    const newPlayerIndex =\r\n      playerIndex + 1 === players.length ? 0 : playerIndex + 1;\r\n    players[newPlayerIndex] = { ...players[newPlayerIndex], current: true };\r\n    setInputValue(players[newPlayerIndex].letters);\r\n  };\r\n\r\n  const addMove = useCallback(() => {\r\n    if (!points) return;\r\n    const prevDots = generateDots(startPosition, 1, true);\r\n    const convertedWord = currentWord.replace(/[\\(,\\)]/g, \"\");\r\n    const finalPosition = {\r\n      ...startPosition,\r\n      ...findPosition(startPosition, -prevDots.length),\r\n    };\r\n    const playerName = players.find((player) => player.current).name;\r\n    setMoves((prev) => [\r\n      ...prev,\r\n      {\r\n        player: playerName,\r\n        letters: `${inputValue}${convertBoardWordToRack(convertedWord)}`,\r\n        word: `${prevDots ? `(${prevDots})` : \"\"}${currentWord}`,\r\n        points: parseInt(points),\r\n        coordinates: convertToBoardCoordinates(finalPosition),\r\n        sumPoints: prev\r\n          .filter((el) => el.player === playerName)\r\n          .reduce((acc, curr) => acc + curr.points, parseInt(points)),\r\n      },\r\n    ]);\r\n    addOcupiedFields(startPosition, convertedWord.length);\r\n    setCurrentWord(\"\");\r\n    setPoints(\"\");\r\n    changeCurrentPlayer();\r\n  }, [points, inputValue, currentWord, startPosition]);\r\n\r\n  const handleExchange = () => {\r\n    //do uzupełnienia, napisane na szybko, żeby sprawdzić całość w boju\r\n    setMoves((prev) => [\r\n      ...prev,\r\n      {\r\n        player: currentPlayer.name,\r\n        letters: `A`,\r\n        word: \"-7\",\r\n        points: 0,\r\n        coordinates: \"\",\r\n        sumPoints: prev\r\n          .filter((el) => el.player === currentPlayer.name)\r\n          .reduce((acc, curr) => acc + curr.points, 0),\r\n      },\r\n    ]);\r\n    changeCurrentPlayer();\r\n  };\r\n\r\n  const handleOnChange = ({ target }) => {\r\n    if (target.value.length > 7) return;\r\n    setInputValue(target.value.toUpperCase());\r\n  };\r\n\r\n  const handleBoardClick = useCallback((x, y) => {\r\n    setStartPosition((prev) =>\r\n      prev.x === x && prev.y === y\r\n        ? { x, y, vertical: !prev.vertical }\r\n        : { x, y, vertical: false }\r\n    );\r\n  }, []);\r\n\r\n  const handleArrowClick = useCallback(\r\n    () => setStartPosition((prev) => ({ ...prev, vertical: !prev.vertical })),\r\n    []\r\n  );\r\n\r\n  const generateDots = (startPosition, distance, back = false) => {\r\n    let dots = \"\";\r\n    const dir = back ? -1 : 1;\r\n    let nextCoordinate = findPosition(startPosition, distance * dir);\r\n    while (\r\n      occupiedFields.some(\r\n        (field) => field.x === nextCoordinate.x && field.y === nextCoordinate.y\r\n      )\r\n    ) {\r\n      dots = `${dots}.`;\r\n      nextCoordinate = findPosition(\r\n        startPosition,\r\n        (distance + dots.length) * dir\r\n      );\r\n    }\r\n    return dots;\r\n  };\r\n\r\n  const handlePutNewLetter = useCallback(\r\n    (letter) => {\r\n      if (!inputValue.includes(letter) && !inputValue.includes(\"?\")) return;\r\n      const isBlank = !inputValue.includes(letter);\r\n      setCurrentWord((prev) => {\r\n        const newLetter = isBlank ? letter.toLowerCase() : letter;\r\n        const dots = generateDots(startPosition, prev.length + 1);\r\n        return `${prev}${newLetter}${dots ? `(${dots})` : \"\"}`;\r\n      });\r\n      setInputValue((prev) =>\r\n        isBlank ? prev.replace(\"?\", \"\") : prev.replace(letter, \"\")\r\n      );\r\n    },\r\n    [\r\n      inputValue,\r\n      startPosition.x,\r\n      startPosition.y,\r\n      startPosition.vertical,\r\n      occupiedFields,\r\n    ]\r\n  );\r\n\r\n  const setName = ({ target }) => {\r\n    setPlayers((prev) => {\r\n      const newA = [\r\n        ...prev.filter((el) => !el.current),\r\n        { ...currentPlayer, name: target.value },\r\n      ];\r\n      return newA;\r\n    });\r\n  };\r\n\r\n  const resetCurrentWord = useCallback(\r\n    (e) => {\r\n      e?.preventDefault();\r\n      setCurrentWord(\"\");\r\n      setInputValue((prev) => `${prev}${convertBoardWordToRack(currentWord)}`);\r\n    },\r\n    [currentWord]\r\n  );\r\n\r\n  const downloadGame = () => {\r\n    const text = createTxtFromMoves(moves);\r\n    const element = document.createElement(\"a\");\r\n    element.setAttribute(\r\n      \"href\",\r\n      \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\r\n    );\r\n    element.setAttribute(\"download\", \"game\");\r\n    element.style.display = \"none\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    document.body.removeChild(element);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    const charCode = e.keyCode;\r\n    if (e.target.nodeName === \"INPUT\" || charCode < 64 || charCode > 123)\r\n      return;\r\n    handlePutNewLetter(e.key.toUpperCase());\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [inputValue, startPosition]);\r\n\r\n  return {\r\n    inputValue,\r\n    startPosition,\r\n    wordPosition: convertToBoardCoordinates(startPosition),\r\n    currentWord,\r\n    moves,\r\n    points,\r\n    playerName: currentPlayer.name,\r\n    handleBoardClick,\r\n    handlePutNewLetter,\r\n    handleOnChange,\r\n    handleArrowClick,\r\n    handleExchange,\r\n    resetCurrentWord,\r\n    addMove,\r\n    setName,\r\n    setPoints,\r\n    downloadGame,\r\n  };\r\n};\r\n\r\nexport default useGameEntry;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../atoms/Button\";\r\n\r\nimport KonvaArrow from \"../atoms/KonvaArrow\";\r\nimport KonvaBoard from \"../organisms/KonvaBoard\";\r\nimport { RackForInput } from \"../organisms/Rack\";\r\nimport Word from \"../organisms/Word\";\r\nimport useGameEntry from \"./hooks/useGameEntry\";\r\n\r\nconst InputArea = styled.div`\r\n  width: 550px;\r\n  height: 80px;\r\n  background: #0c5605;\r\n  position: relative;\r\n`;\r\n\r\nconst InputsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst PlayerNameInput = styled.input`\r\n  width: 550px;\r\n  margin: auto;\r\n  display: block;\r\n  border: none;\r\n  font-weight: bold;\r\n  outline: none;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst PointsInput = styled.input`\r\n  width: 80px;\r\n  height: 80px;\r\n  margin-left: 10px;\r\n  text-align: center;\r\n  font-size: 22px;\r\n  -moz-appearance: textfield;\r\n\r\n  &::-webkit-outer-spin-button,\r\n  &::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst HiddenInput = styled.input`\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0;\r\n  position: absolute;\r\n`;\r\nconst BoardWrapper = styled.div`\r\n  width: 650px;\r\n  height: 650px;\r\n  position: relative;\r\n  margin: auto;\r\n`;\r\n\r\nconst ButtonsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst GameEntry = () => {\r\n  const {\r\n    inputValue,\r\n    startPosition,\r\n    wordPosition,\r\n    currentWord,\r\n    moves,\r\n    playerName,\r\n    points,\r\n    handlePutNewLetter,\r\n    handleBoardClick,\r\n    handleOnChange,\r\n    handleArrowClick,\r\n    handleExchange,\r\n    resetCurrentWord,\r\n    addMove,\r\n    setName,\r\n    setPoints,\r\n    downloadGame,\r\n  } = useGameEntry();\r\n  return (\r\n    <>\r\n      <PlayerNameInput value={playerName} onChange={setName} />\r\n      <InputsWrapper>\r\n        <InputArea onContextMenu={resetCurrentWord}>\r\n          <HiddenInput value={inputValue} onChange={handleOnChange} />\r\n          <RackForInput\r\n            inputValue={inputValue}\r\n            handleClickOnTile={handlePutNewLetter}\r\n          />\r\n        </InputArea>\r\n        <PointsInput\r\n          type=\"number\"\r\n          value={points}\r\n          onChange={({ target }) => setPoints(target.value)}\r\n        />\r\n      </InputsWrapper>\r\n      <ButtonsWrapper>\r\n        <Button onClick={addMove}>dodaj</Button>\r\n        <Button onClick={resetCurrentWord}>cofnij</Button>\r\n        <Button onClick={handleExchange}>wymiana</Button>\r\n        <Button>strata</Button>\r\n        <Button>pas</Button>\r\n        <Button onClick={downloadGame}>pobierz</Button>\r\n      </ButtonsWrapper>\r\n      <BoardWrapper>\r\n        <KonvaBoard handleBoardClick={handleBoardClick}>\r\n          <KonvaArrow\r\n            x={startPosition.x}\r\n            y={startPosition.y}\r\n            vertical={startPosition.vertical}\r\n            callback={handleArrowClick}\r\n          />\r\n          <Word letters={currentWord} coordinates={wordPosition} isNewMove />\r\n          {moves\r\n            .filter((el) => el.coordinates)\r\n            .map((el, i) => (\r\n              <Word key={i} letters={el.word} coordinates={el.coordinates} />\r\n            ))}\r\n        </KonvaBoard>\r\n      </BoardWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameEntry;\r\n","import React from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport { AppContextProvider } from \"../context\";\r\nimport Home from \"../components/pages/Home\";\r\nimport GameplayAnalysed from \"../components/pages/GameplayAnalysed\";\r\nimport MainTemplate from \"../components/templates/MainTemplate\";\r\nimport GameEntry from \"./pages/GameEntry\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <AppContextProvider>\r\n      <MainTemplate>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/gcg-report-viewer/\" element={<Home />} />\r\n            <Route path=\"/zadania\" element={<GameplayAnalysed />} />\r\n            <Route path=\"/analiza\" element={<GameplayAnalysed />} />\r\n            <Route path=\"/dodaj-zapis\" element={<GameEntry />} />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </MainTemplate>\r\n    </AppContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}